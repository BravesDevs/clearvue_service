{
  "swagger": "2.0",
  "info": {
    "description": "ClearVue Swagger api documentation",
    "version": "1.0.0",
    "title": "ClearVue API Docs",
    "contact": {
      "name": "Jay Modi",
      "url": "https://app.clearvue.co.uk",
      "email": "jay.modi@marutitech.com"
    }
  },
  "tags": [
    {
      "name": "Agency"
    },
    {
      "name": "Auth"
    },
    {
      "name": "Automated Events"
    },
    {
      "name": "Client"
    },
    {
      "name": "Dashboard"
    },
    {
      "name": "Demographic Dashboard"
    },
    {
      "name": "Department"
    },
    {
      "name": "Faq"
    },
    {
      "name": "Job"
    },
    {
      "name": "Manage Client-Agency Association"
    },
    {
      "name": "Master Admin Dashboard"
    },
    {
      "name": "Messages"
    },
    {
      "name": "Payroll"
    },
    {
      "name": "Rate Card"
    },
    {
      "name": "Regions"
    },
    {
      "name": "Sector"
    },
    {
      "name": "Sites"
    },
    {
      "name": "Survey"
    },
    {
      "name": "Time And Attendance"
    },
    {
      "name": "Trends Analysis"
    },
    {
      "name": "Users"
    },
    {
      "name": "Worker"
    }
  ],
  "paths": {
    "/api/v1/login/": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Login",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "string",
                  "minLength": 1
                },
                "permissions": {
                  "type": "array",
                  "uniqueItems": true,
                  "minItems": 1,
                  "items": {
                    "required": [
                      "id",
                      "feature_id",
                      "access_type",
                      "user_type_id",
                      "feature_name",
                      "feature_code"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "feature_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "access_type": {
                        "type": "number"
                      },
                      "user_type_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "feature_name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "feature_code": {
                        "type": "string",
                        "minLength": 1
                      }
                    }
                  }
                },
                "user_type": {
                  "type": "string"
                },
                "client_id": {},
                "agency_id": {},
                "access_token": {
                  "type": "string",
                  "minLength": 1
                },
                "refresh_token": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "ok",
                "user_id",
                "permissions",
                "user_type",
                "access_token",
                "refresh_token"
              ],
              "x-examples": {
                "example-1": {
                  "ok": true,
                  "user_id": "1",
                  "permissions": [
                    {
                      "id": "1",
                      "feature_id": "1",
                      "access_type": 3,
                      "user_type_id": "1",
                      "feature_name": "Agency",
                      "feature_code": "agency"
                    },
                    {
                      "id": "2",
                      "feature_id": "2",
                      "access_type": 3,
                      "user_type_id": "1",
                      "feature_name": "Client",
                      "feature_code": "client"
                    },
                    {
                      "id": "26",
                      "feature_id": "12",
                      "access_type": 3,
                      "user_type_id": "1",
                      "feature_name": "Manage Associations",
                      "feature_code": "manage_associations"
                    },
                    {
                      "id": "30",
                      "feature_id": "14",
                      "access_type": 3,
                      "user_type_id": "1",
                      "feature_name": "Sector",
                      "feature_code": "sector"
                    }
                  ],
                  "user_type": "",
                  "client_id": null,
                  "agency_id": null,
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMSIsInVzZXJfdHlwZV9pZCI6IjEiLCJ1c2VyX25hbWUiOiJhZG1pbiIsImlhdCI6MTY0MjM1NDU4MywiZXhwIjoxNjQyMzU0ODgzfQ.v0FxDjD5d4fswtjrCy4fKFdkidTIGGBDfLbcW9rtoJ8",
                  "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMSIsInVzZXJfdHlwZV9pZCI6IjEiLCJ1c2VyX25hbWUiOiJhZG1pbiIsImlhdCI6MTY0MjM1NDU4MywiZXhwIjoxNjQyNDQwOTgzfQ.1mxPhkZOnNz6Hsx4ncA8TXT2-iYVWEYbl5n02Z1GA2Q"
                }
              }
            },
            "examples": {
              "Master Admin": {
                "ok": true,
                "user_id": "1",
                "permissions": [
                  {
                    "id": "1",
                    "feature_id": "1",
                    "access_type": 3,
                    "user_type_id": "1",
                    "feature_name": "Agency",
                    "feature_code": "agency"
                  },
                  {
                    "id": "2",
                    "feature_id": "2",
                    "access_type": 3,
                    "user_type_id": "1",
                    "feature_name": "Client",
                    "feature_code": "client"
                  },
                  {
                    "id": "26",
                    "feature_id": "12",
                    "access_type": 3,
                    "user_type_id": "1",
                    "feature_name": "Manage Associations",
                    "feature_code": "manage_associations"
                  },
                  {
                    "id": "30",
                    "feature_id": "14",
                    "access_type": 3,
                    "user_type_id": "1",
                    "feature_name": "Sector",
                    "feature_code": "sector"
                  }
                ],
                "user_type": "",
                "client_id": null,
                "agency_id": null,
                "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMSIsInVzZXJfdHlwZV9pZCI6IjEiLCJ1c2VyX25hbWUiOiJhZG1pbiIsImlhdCI6MTY0MjM1NDU4MywiZXhwIjoxNjQyMzU0ODgzfQ.v0FxDjD5d4fswtjrCy4fKFdkidTIGGBDfLbcW9rtoJ8",
                "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiMSIsInVzZXJfdHlwZV9pZCI6IjEiLCJ1c2VyX25hbWUiOiJhZG1pbiIsImlhdCI6MTY0MjM1NDU4MywiZXhwIjoxNjQyNDQwOTgzfQ.1mxPhkZOnNz6Hsx4ncA8TXT2-iYVWEYbl5n02Z1GA2Q"
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "status": {
                  "type": "number"
                },
                "ok": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "status",
                "ok",
                "message",
                "error"
              ],
              "x-examples": {
                "example-1": {
                  "status": 404,
                  "ok": false,
                  "message": "Oops! Couldn't find your account.",
                  "error": "USER_NOT_FOUND"
                }
              }
            },
            "examples": {
              "User Not Found": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find your account.",
                "error": "USER_NOT_FOUND"
              }
            }
          }
        },
        "description": "User login EndPoint"
      }
    },
    "/api/v1/agency/": {
      "post": {
        "tags": [
          "Agency"
        ],
        "summary": "Create agency",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created Agency object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createAgency"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-new-agency-response-payload"
            },
            "examples": {
              "CREATE-AGENCY-RESPONSE": {
                "ok": true,
                "message": "Agency has been added successfully.",
                "agency_id": 11
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "get agency list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "schema": {
              "$ref": "#/definitions/get-list-of-agency-response-payload"
            },
            "examples": {
              "LIST-AGENCY-RESPONSE": {
                "ok": true,
                "count": 3,
                "agency_list": [
                  {
                    "association_id": "2",
                    "agency_id": "4",
                    "agency_name": "Daersk Agencies",
                    "address": "{\"address_line_1\": \"51, Lex Avenue, Beverly Hills\", \"address_line_2\": \"Los Angeles, California\", \"address_line_3\": \"United States\"}",
                    "post_code": "101101",
                    "city": "LA",
                    "country": "USA",
                    "created_at": "2022-01-04T17:24:20.000Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"page\" is required",
                    "path": [
                      "page"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/agency/{id}": {
      "put": {
        "tags": [
          "Agency"
        ],
        "summary": "Update agency",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "This can only be done by CleaeVue Admin.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "name",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "address_line_1",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "address_line_2",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "address_line_3"
          },
          {
            "in": "formData",
            "type": "string",
            "name": "city",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "country",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "postCode",
            "required": true
          },
          {
            "in": "formData",
            "type": "file",
            "name": "profile"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "Update-Response": {
                "ok": true,
                "message": "Agent details has been updated successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Agency"
        ],
        "summary": "get agency details",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get-agency-response-payload"
            },
            "examples": {
              "SAMPLE-AGENCY-DETAILS": {
                "ok": true,
                "agency": {
                  "id": "1",
                  "name": "Agency1Updated",
                  "address": {
                    "address_line_1": "dfwdffd",
                    "address_line_2": "dfdfefg",
                    "address_line_3": "dvsdvfv"
                  },
                  "country": "sdvfv",
                  "city": "vefvefv",
                  "post_code": "123456",
                  "resource": "AGENCY1.jpg",
                  "count": 25,
                  "profile_url": "link-for-image"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"id\" is required",
                    "path": [
                      "id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/department/{id}": {
      "put": {
        "tags": [
          "Department"
        ],
        "summary": "Update department",
        "description": "This can only be done by CleaeVue Admin.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateDepartment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/update-department-response-payload"
            },
            "examples": {
              "SAMPLE-UPDATE-RESPONSE": {
                "ok": true,
                "message": "Department details has been updated successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/department/": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Create department",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created department object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateDepartment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-new-department-response-payload"
            },
            "examples": {
              "CREATE-DEPARTMENT-RESPONSE": {
                "ok": true,
                "department_id": 2
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "get department list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "clientId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get-list-of-department-response-payload"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "department_list": [
                  {
                    "id": 1,
                    "name": "IT"
                  },
                  {
                    "id": 4,
                    "name": "Test 3"
                  },
                  {
                    "id": 5,
                    "name": "Test 5"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"page\" is required",
                    "path": [
                      "page"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/rate-card/": {
      "post": {
        "tags": [
          "Rate Card"
        ],
        "summary": "Create rate card",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created rate card object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createRateCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-new-rate-card-response-payload"
            },
            "examples": {
              "CREATE-RATE-CARD-RESPONSE": {
                "ok": true,
                "rate_card_id": 2
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Rate Card"
        ],
        "summary": "get rate card list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get-list-of-rate-card-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"page\" is required",
                    "path": [
                      "page"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/rate-card/{id}": {
      "put": {
        "tags": [
          "Rate Card"
        ],
        "summary": "Update rate card",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateRateCard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/job/": {
      "post": {
        "tags": [
          "Job"
        ],
        "summary": "Create Job",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created Job object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-new-job-response-payload"
            },
            "examples": {
              "CREATE-JOB-RESPONSE": {
                "ok": true,
                "job_id": 2
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Job"
        ],
        "summary": "get Job list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "client_id",
            "in": "query",
            "type": "integer"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "site_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Listing",
            "schema": {
              "$ref": "#/definitions/get-job-response-payload"
            },
            "examples": {
              "CREATE-JOB-RESPONSE": {
                "ok": true,
                "job": 2
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/job/{id}": {
      "put": {
        "tags": [
          "Job"
        ],
        "summary": "Update Job",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            },
            "examples": {
              "UPDATE-JOB-RESPONSE": {
                "ok": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/sector/": {
      "post": {
        "tags": [
          "Sector"
        ],
        "summary": "Create sector",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created sector object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateSector"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-new-sector-response-payload"
            },
            "examples": {
              "CREATE-SECTOR-RESPONSE": {
                "ok": true,
                "message": "Sector has been added successfully.",
                "sector_id": "25"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"key\" is required",
                    "path": [
                      "key"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Sector"
        ],
        "summary": "get sector list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "get list of sector",
            "schema": {
              "$ref": "#/definitions/get-list-of-sector-response-payload"
            },
            "examples": {
              "GET_LIST-OF-SECTOR-RESPONSE": {
                "ok": true,
                "count": 24,
                "sector_list": {
                  "sector_id": 1,
                  "sector_key": "automotive",
                  "sector_value": "Automotive"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"key\" is required",
                    "path": [
                      "key"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/sector": {
      "put": {
        "tags": [
          "Sector"
        ],
        "summary": "Update sector",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateSector"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"key\" is required",
                    "path": [
                      "key"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": ""
      },
      "parameters": []
    },
    "/api/v1/workers": {
      "post": {
        "tags": [
          "Worker"
        ],
        "summary": "Add new Worker in system",
        "operationId": "post-api-v1-workers",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-new-worker-response-payload"
            },
            "examples": {
              "ADD-WORKER-RESPONSE": {
                "ok": true,
                "message": "Worker has been added successfully.",
                "worker_id": 9
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"email\" is required",
                    "path": [
                      "email"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found (For Invlid value for agency_id/department_id/client_id etc)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "RESOURCE-NOT-FOUND-ERROR-RESPONSE": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "WORKER-ALREADY-EXISTS-ERROR-RESPONSE": {
                "status": 409,
                "ok": false,
                "message": "Requested worker is already exists.",
                "error": "WORKER_ALREADY_EXISTS"
              }
            }
          }
        },
        "description": "This API is used to create a new worker. Worker can be added by agency or client admin.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Authorization token",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/create-new-worker-request-payload"
            },
            "x-examples": {
              "ADD-NEW-WORKER": {
                "first_name": "John",
                "last_name": "Doe",
                "date_of_birth": "2001-10-21",
                "national_insurance_number": "CANADANIN10100199",
                "post_code": "101101",
                "nationality": "CANADIAN",
                "orientation": "N",
                "email": "john.doe@facebook.com",
                "country_code": "+1",
                "mobile": "1234567890",
                "payroll_ref": "1",
                "job_id": "2",
                "client_id": "1",
                "start_date": "2021-08-16",
                "agency_id": "1",
                "is_active": true
              }
            }
          }
        ]
      },
      "get": {
        "tags": [
          "Worker"
        ],
        "summary": "Get the list of workers",
        "operationId": "get-api-v1-workers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-workers-list-response"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "count": 3,
                "workers": [
                  {
                    "id": "5867",
                    "first_name": "Maliander",
                    "last_name": "Scotts",
                    "email": "maliander@zetmail.com",
                    "national_insurance_number": "12101",
                    "payroll_ref": "1",
                    "employee_id": "10001",
                    "date_of_birth": "1994-03-11",
                    "post_code": "LE4 8LJ",
                    "start_date": "2018-02-08",
                    "nationality": "British",
                    "orientation": "Female",
                    "agency_id": "3",
                    "agency_name": "Alaska Freight Corporation ",
                    "client_id": "4",
                    "client_name": "British Company",
                    "job_id": "2",
                    "is_app_downloaded": 0,
                    "is_active": 0,
                    "in_actived_at": "2022-05-11",
                    "created_at": "2022-05-04"
                  }
                ]
              }
            }
          }
        },
        "description": "This API is used to get the list of the workers from client_id or agency_id.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "page"
          },
          {
            "type": "number",
            "in": "query",
            "name": "limit"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_by"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_type"
          },
          {
            "type": "string",
            "in": "query",
            "name": "site_id"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ]
      }
    },
    "/api/v1/client": {
      "get": {
        "summary": "Get the list of clients",
        "tags": [
          "Client"
        ],
        "operationId": "get-api-v1-client",
        "description": "This API is used by Platform Admins to fetch all the clients data.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/list-of-clients-response"
            },
            "examples": {
              "CLIENTS": {
                "ok": true,
                "count": 3,
                "client_details": [
                  {
                    "client_id": 16,
                    "client_name": "Alexei Corporation",
                    "sector_id": "1",
                    "sector_name": "AI",
                    "address": {
                      "address_line_1": "51, Lex Avenue, Beverly Hills",
                      "address_line_2": "Los Angeles, California",
                      "address_line_3": "United States"
                    },
                    "post_code": "101101",
                    "city": "LA",
                    "country": "USA",
                    "created_at": "2021-12-29T11:20:13.000Z"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "NOT FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Create new client",
        "operationId": "post-api-v1-client",
        "responses": {
          "201": {
            "description": "Created",
            "examples": {
              "CREATED": {
                "ok": true,
                "message": "Client has been added successfully.",
                "client_id": 8
              }
            },
            "schema": {
              "$ref": "#/definitions/create-client-response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"admin_email\" is not allowed to be empty",
                    "path": [
                      "admin_email"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "Unauthorized": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "CLIENT EXISTS": {
                "status": 409,
                "ok": false,
                "message": "Requested client is already exists.",
                "error": "CLIENT_ALREADY_EXISTS"
              }
            }
          }
        },
        "description": "This API is used by platform admin to create new clients",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/createClient"
            },
            "x-examples": {
              "SAMPLE CLIENT PAYLOAD": {
                "client_name": "Navalny Corporation",
                "admin_name": "Alex Khushrov",
                "address_line_1": "51, Lex Avenue, Beverly Hills",
                "address_line_2": "Los Angeles, California",
                "address_line_3": "United States",
                "city": "LA",
                "country": "USA",
                "country_code": "+1",
                "sector_id": 1,
                "post_code": "101101",
                "admin_contact_number": "6549873215",
                "admin_email": "alexeikhastorov@gmail.com"
              }
            }
          }
        ]
      }
    },
    "/api/v1/client/{clientId}": {
      "parameters": [
        {
          "type": "string",
          "name": "clientId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Get client details for given clientID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/client-details"
            },
            "examples": {
              "SAMPLE CLIENT REPONSE": {
                "ok": true,
                "client_details": {
                  "id": 1,
                  "name": "Maersk Sealand Oneline",
                  "sector_id": 1,
                  "sector_name": "Automotive",
                  "address": {
                    "address_line_1": "Vancouver",
                    "address_line_2": "British Columbia",
                    "address_line_3": "CA"
                  },
                  "post_code": "101101",
                  "city": "Vancouver",
                  "country": "Canada",
                  "created_at": "2022-01-01T00:00:00.000Z",
                  "profile_url": "link-for-image"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "CLIENT-NOT-FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        },
        "operationId": "get-api-v1-client-clientId",
        "description": "This api is used by platform admins to fetch the particular client details.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ]
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update client information for given clientID",
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "put-api-v1-client-clientId",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "UPDATED": {
                "ok": true,
                "message": "Client details has been updated successfully."
              }
            },
            "schema": {
              "$ref": "#/definitions/update-client-information-by-clientID"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "This API is used by the platform admins to update the particular client data.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "formData",
            "type": "string",
            "name": "name",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "address_line_1",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "address_line_2",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "address_line_3"
          },
          {
            "in": "formData",
            "type": "string",
            "name": "city",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "country",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "postCode",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "sectorId",
            "required": true
          },
          {
            "in": "formData",
            "type": "file",
            "name": "profile"
          }
        ]
      }
    },
    "/api/v1/region": {
      "post": {
        "tags": [
          "Regions"
        ],
        "summary": "Create new region for given client",
        "operationId": "post-api-v1-region",
        "responses": {
          "201": {
            "description": "Created",
            "examples": {
              "CREATED RESPONSE": {
                "ok": true,
                "message": "Region has been added successfully.",
                "region_id": 7
              }
            },
            "schema": {
              "$ref": "#/definitions/response-payload-to-create-region"
            }
          }
        },
        "description": "This API is used to add new region",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/request-payload-to-create-region"
            },
            "x-examples": {
              "SAMPLE REGION PAYLOAD": {
                "name": "New York",
                "client_id": 15
              }
            },
            "description": ""
          }
        ]
      },
      "get": {
        "tags": [
          "Regions"
        ],
        "summary": "Get the list of regions for given client",
        "operationId": "get-api-v1-region",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE RESPONSE": {
                "ok": true,
                "region_details": [
                  {
                    "id": 1,
                    "name": "Dallas",
                    "client_id": 15,
                    "created_by": 1,
                    "created_at": "2021-12-30T09:52:23.000Z",
                    "updated_by": 1,
                    "updated_at": "2021-12-30T09:52:23.000Z"
                  }
                ]
              }
            }
          }
        },
        "description": "This API is used to fetch all the regions created by client.",
        "parameters": [
          {
            "type": "integer",
            "in": "query",
            "name": "clientId",
            "description": "ID of the client who created region",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ]
      }
    },
    "/api/v1/site": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Get list of sites for given client",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-list-of-sites-response-payload"
            },
            "examples": {
              "SAMPLE RESPONSE": {
                "ok": true,
                "sites": [
                  {
                    "id": "2",
                    "name": "South Bopal",
                    "region_id": "3",
                    "address": {
                      "address_line_1": "Sarkhej Gandhinagar Highway",
                      "address_line_2": "South Bopal",
                      "address_line_3": "Bopal"
                    },
                    "post_code": "393003",
                    "city": "Ahmedabad",
                    "country": "India",
                    "region_name": "Bopal",
                    "created_at": "2022-03-24T11:50:27.000Z",
                    "created_by": "8",
                    "updated_at": "2022-03-24T11:50:27.000Z",
                    "updated_by": "8"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get-api-v1-site",
        "description": "This API is used to get all the sites",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ]
      },
      "post": {
        "tags": [
          "Sites"
        ],
        "summary": "Create new site for given client",
        "operationId": "post-api-v1-site",
        "responses": {
          "201": {
            "description": "Created",
            "examples": {
              "CRETED SITE RESPONSE ": {
                "ok": true,
                "message": "Site has been added successfully.",
                "site_id": 5
              }
            },
            "schema": {
              "$ref": "#/definitions/create-new-site-response-payload"
            }
          }
        },
        "description": "This API is used to create new site.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/createSite"
            },
            "x-examples": {
              "SAMPLE SITE PAYLOAD": {
                "name": "Houston",
                "region_id": 1,
                "department_id": 1,
                "address_line_1": "Hilton Avenue",
                "address_line_2": "University Road",
                "address_line_3": "Dallas",
                "post_code": "100101",
                "city": "Houston, TX",
                "country": "USA"
              }
            }
          }
        ]
      }
    },
    "/api/v1/site-drop-down": {
      "get": {
        "tags": [
          "Sites"
        ],
        "summary": "Get list of sites for given client",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-list-of-site-drop-down"
            },
            "examples": {
              "SAMPLE RESPONSE": {
                "ok": true,
                "sites": [
                  {
                    "id": "2",
                    "name": "South Bopal"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ]
      }
    },
    "/api/v1/agency-client/": {
      "post": {
        "tags": [
          "Manage Client-Agency Association"
        ],
        "summary": "Create Client-Agency Association",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "description": "Created Agency Association object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateAgencyAssociation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-new-agency-association-response-payload"
            },
            "examples": {
              "CREATE-Agency-Association-RESPONSE": {
                "ok": true,
                "agency_association_id": 2
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"margin\" is required",
                    "path": [
                      "margin"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Manage Client-Agency Association"
        ],
        "summary": "get agency association list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get-list-of-agency-association-response-payload"
            },
            "examples": {
              "List Associations": {
                "ok": true,
                "agency_association_list": [
                  {
                    "id": 0,
                    "margin": 0,
                    "agency_id": 0,
                    "client_id": 0,
                    "currency": "inr",
                    "client_name": "string",
                    "agency_name": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"page\" is required",
                    "path": [
                      "page"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/agency-client/{id}": {
      "put": {
        "tags": [
          "Manage Client-Agency Association"
        ],
        "summary": "Update Agency Association",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/createUpdateAgencyAssociation"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"margin\" is required",
                    "path": [
                      "margin"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/workers/bulk": {
      "post": {
        "tags": [
          "Worker"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "Upload CSV to bulk insert workers data.",
        "operationId": "post-api-v1-bulk-workers-upload",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/bulk-worker-upload-response"
            },
            "examples": {
              "CREATED": {
                "ok": true,
                "message": "Workers has been added successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "status": 400,
                "ok": false,
                "message": "Missing data for required fields.",
                "error": "BAD_REQUEST"
              }
            }
          }
        },
        "description": "This API is used by both Agency and Client to upload the bulk data of the workers in CSV.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "clientId",
            "description": "Client ID"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "agencyId",
            "description": "Agency ID"
          },
          {
            "in": "formData",
            "type": "file",
            "name": "workers",
            "description": "CSV file of workers records",
            "required": true
          }
        ]
      },
      "put": {
        "tags": [
          "Worker"
        ],
        "summary": "Bulk update workers data with agency, client, or department. Only one at a time.",
        "operationId": "put-api-v1-workers-bulk",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bulk-worker-upload-response"
            },
            "examples": {
              "SAMPLE-OK-RESPONSE": {
                "ok": true,
                "message": "Workers data has been updated successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "status": 400,
                "ok": false,
                "message": "Missing data for required fields.",
                "error": "BAD_REQUEST"
              }
            }
          }
        },
        "description": "This API is used to update the worker data in bulk or individually.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Update-workers-request-payload"
            },
            "description": "",
            "x-examples": {
              "SAMPLE-REQUEST-PAYLOAD": {
                "client_id": "1706 | null",
                "agency_id": "1 | null",
                "job_id": "1 | null",
                "is_active": "true/false | null",
                "workers": [
                  1,
                  3,
                  4
                ]
              }
            }
          }
        ]
      }
    },
    "/api/v1/user": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "user_details": {
                  "id": 1,
                  "user_type_id": 2,
                  "user_type": "Client-Admin",
                  "user_type_name": "Client Admin",
                  "agencyId": null,
                  "client_id": 15,
                  "worker_id": null,
                  "name": "admin user",
                  "email": "admin@gmail.com",
                  "country_code": "+91",
                  "mobile": "9876789087",
                  "profile_url": "<AWS_OBJECT_SIGNED_URL>"
                }
              }
            }
          }
        },
        "operationId": "get-api-v1-user",
        "description": "This API is used to get the user profile details.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "",
        "operationId": "post-api-v1-user",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/create-user-response-payload"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "message": "User has been added successfully",
                "user_id": 21
              }
            }
          }
        },
        "description": "This API is used to create a new user",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "user_type": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "email": {
                  "type": "string",
                  "minLength": 1
                },
                "country_code": {
                  "type": "string",
                  "minLength": 1
                },
                "phone": {
                  "type": "number"
                }
              },
              "required": [
                "user_type",
                "id",
                "name",
                "email",
                "country_code",
                "phone"
              ],
              "x-examples": {
                "example-1": {
                  "user_type": 2,
                  "id": 99,
                  "name": "Vladimir Putin",
                  "email": "vladimirclients@gmail.com",
                  "country_code": "+1",
                  "phone": 1234567890
                }
              }
            },
            "x-examples": {
              "example-1": {
                "user_type": 2,
                "id": 99,
                "name": "Vladimir Putin",
                "email": "vladimirclients@gmail.com",
                "country_code": "+1",
                "phone": 1234567890
              }
            }
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "",
        "operationId": "put-api-v1-user",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "message": "User data has been updated successfully."
              }
            }
          }
        },
        "description": "This API is used to update the user profile details",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "formData",
            "type": "file",
            "name": "profile",
            "description": ".jpg image of the user profile"
          },
          {
            "in": "formData",
            "type": "string",
            "name": "name"
          },
          {
            "in": "formData",
            "type": "string",
            "name": "mobile"
          }
        ]
      }
    },
    "/api/v1/time-and-attendance-upload": {
      "post": {
        "tags": [
          "Time And Attendance"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "upload Time And Attendance",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "in": "formData",
            "type": "file",
            "name": "timeAndAttendance",
            "description": "CSV file of time and attendance records",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "client_id",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "site_id",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "agency_id",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "start_date",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "end_date",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "week",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/time-and-attendance-upload-response"
            },
            "examples": {
              "SAMPLE-OK-RESPONSE": {
                "ok": true,
                "message": "time and attendance data has been updated successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "status": 400,
                "ok": false,
                "message": "worker id does not match for national insurance number(s): 1,123",
                "error": "BAD_REQUEST"
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/time-and-attendance": {
      "get": {
        "tags": [
          "Time And Attendance"
        ],
        "summary": "get Time And Attendance list",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_by",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_type",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get-list-of-time-and-attendance-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"page\" is required",
                    "path": [
                      "page"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/time-and-attendance/{id}": {
      "get": {
        "tags": [
          "Time And Attendance"
        ],
        "summary": "get Time And Attendance detail",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "required": true,
            "name": "limit"
          },
          {
            "type": "string",
            "in": "query",
            "required": true,
            "name": "sort_by"
          },
          {
            "type": "string",
            "in": "query",
            "required": true,
            "name": "sort_type"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/get-time-and-attendance-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"id\" is required",
                    "path": [
                      "id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/client-users": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/client-users-response-model"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "users": [
                  {
                    "id": "4",
                    "user_name": "regional admin",
                    "user_type_id": "4",
                    "user_type": "client_regional",
                    "user_type_name": "Regional Admin",
                    "name": "Example Region",
                    "email": "region_admin@getnada.com",
                    "is_able_access": "1",
                    "country_code": "+91",
                    "mobile": "9898778786",
                    "verbose_id": "1"
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "Forbidden": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "example-1": {
                "ok": true,
                "users": []
              }
            }
          }
        },
        "operationId": "get-api-v1-client-users",
        "description": "API used to get all the client users i.e site admin, regional admins associated with the respective client.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth token",
            "required": true
          }
        ]
      }
    },
    "/api/v1/client/users": {
      "post": {
        "summary": "Add the client users for site and region role.",
        "operationId": "post-api-v1-client-users",
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/response-model-client-users"
            },
            "examples": {
              "SAMPLE-CREATED-RESPONSE": {
                "ok": true,
                "user_id": 27,
                "message": "Client user has been added successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "status": 400,
                "ok": false,
                "message": "Missing data for required fields.",
                "error": "BAD_REQUEST"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "Unprocessable-Entity": {
                "status": 422,
                "ok": false,
                "message": "Invalid data for required fields.",
                "error": "UNPROCESSABLE_ENTITY"
              }
            }
          }
        },
        "description": "This API is used to add the client users for the site and region roles.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/request-payload-to-add-client-users"
            },
            "x-examples": {
              "SAMPLE-REQUEST-PAYLOAD": {
                "client_role": 1,
                "id": 1,
                "name": "Alexei",
                "email": "alexei@americana.com",
                "phone": "1234567890",
                "country_code": "+1"
              }
            }
          }
        ]
      },
      "put": {
        "summary": "Update Client Users Contact Details",
        "operationId": "put-api-v1-client-users",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true,
                "message": "Client user details has been updated successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "example-1": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"id\" is required",
                    "path": [
                      "client_name"
                    ]
                  }
                ]
              }
            }
          }
        },
        "description": "This Endpoint is used to update the client users details and can be used by client admin.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/updateClientUsersModelPayload"
            },
            "x-examples": {
              "SAMPLE-PAYLOAD": {
                "name": "Max Blanc",
                "phone": "1234567890",
                "country_code": "+1",
                "user_type_id": "4",
                "id": "13"
              }
            }
          }
        ]
      }
    },
    "/api/v1/shift": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getShiftsListModel"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "count": 1,
                "shifts": [
                  {
                    "id": "1",
                    "name": "AM",
                    "createdBy": "1",
                    "createdAt": "2022-01-19T13:01:29.000Z",
                    "updatedBy": "1",
                    "updatedAt": "2022-01-19T13:01:29.000Z"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get-api-v1-shift",
        "description": "This API is used to get the shifts list.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          }
        ]
      },
      "post": {
        "summary": "Add Shifts",
        "operationId": "post-api-v1-shift",
        "responses": {
          "201": {
            "description": "Created",
            "examples": {
              "SAMPLE-RESPONSE-PAYLOAD": {
                "ok": true,
                "message": "Shift has been added successfully.",
                "shift_id": 6
              }
            },
            "schema": {
              "$ref": "#/definitions/add-shift-response-payload"
            }
          }
        },
        "description": "This API is used to add the shift type.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Payload"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "x-examples": {
              "SAMPLE-PAYLOAD": {
                "name": "Demo Shift1"
              }
            }
          }
        ]
      }
    },
    "/api/v1/bookings": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-booking-details"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "count": 1,
                "bookings": [
                  {
                    "id": "1",
                    "client_id": "1",
                    "client_name": "Soumya Mehta Client",
                    "association_count": "1",
                    "start_date": "2022-03-20",
                    "end_date": "2022-03-26",
                    "department_id": "1",
                    "department_name": "Information Technology",
                    "shift_type_id": "11",
                    "shift_name": "AM",
                    "region_id": "1",
                    "region_name": "XYZ-Ahmedabad Region",
                    "site_id": "1",
                    "site_name": "XYZ-Ahmedabad Site",
                    "total": 4,
                    "status": "1",
                    "verbose_status": "FULFILLED"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          }
        },
        "operationId": "get-api-v1-booking",
        "description": "This API is used to get the booking of the client based on client ID.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "x-examples": {
              "example-1": {}
            }
          },
          {
            "type": "integer",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "page"
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_by"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_type"
          }
        ]
      },
      "post": {
        "summary": "",
        "operationId": "post-api-v1-booking",
        "responses": {
          "201": {
            "description": "Created",
            "examples": {
              "SAMPLE-CREATE-RESPONSE": {
                "ok": true,
                "booking_id": [
                  8,
                  9
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/create-shift-booking"
            }
          }
        },
        "description": "This API is used to add the shift booking.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "x-examples": {
              "SAMPLE-REQUEST-BODY": {
                "repeat": 2,
                "start_date": "2022-01-01",
                "end_date": "2022-02-07",
                "department_id": 1,
                "site_id": 8,
                "region_id": 3,
                "shift_type_id": 1,
                "required_heads": {
                  "1": 10,
                  "2": 10,
                  "3": 10,
                  "4": 10,
                  "5": 10,
                  "6": 10,
                  "7": 10
                },
                "requested_total": 70,
                "agency_requested": [
                  {
                    "agency_id": 19,
                    "requested_heads": {
                      "1": 5,
                      "2": 5,
                      "3": 5,
                      "4": 5,
                      "5": 5,
                      "6": 5,
                      "7": 5
                    },
                    "total": 35
                  },
                  {
                    "agency_id": 11,
                    "requested_heads": {
                      "1": 5,
                      "2": 5,
                      "3": 5,
                      "4": 5,
                      "5": 5,
                      "6": 5,
                      "7": 5
                    },
                    "total": 35
                  }
                ]
              }
            }
          }
        ]
      },
      "parameters": [],
      "put": {
        "summary": "Update Bookings",
        "operationId": "put-api-v1-booking",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE_SUCCESS": {
                "ok": true,
                "message": "Booking has updated successfully."
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORISED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "This endpoint is used by site-admin to update the shift booking details.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/samplebookingdetailsupdatepayload"
            },
            "x-examples": {
              "SAMPLE_REQUEST_PAYLOAD": {
                "booking_total": 50,
                "booking_details": [
                  {
                    "booking_association_id": 1,
                    "requested_heads": {
                      "1": 5,
                      "2": 5,
                      "3": 0,
                      "4": 10,
                      "5": 10,
                      "6": 0,
                      "7": 5
                    },
                    "total_heads": 35
                  },
                  {
                    "booking_association_id": 2,
                    "requested_heads": {
                      "1": 5,
                      "2": 5,
                      "3": 5,
                      "4": 0,
                      "5": 0,
                      "6": 0,
                      "7": 0
                    },
                    "total_heads": 15
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "/api/v1/bookings/{booking_id}": {
      "parameters": [
        {
          "type": "string",
          "name": "booking_id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "",
        "operationId": "put-api-v1-booking-booking_id",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-UPDATE-RESPONSE": {
                "ok": true,
                "message": "Booking has updated successfully."
              }
            },
            "schema": {
              "$ref": "#/definitions/update-booking-response-payload"
            }
          }
        },
        "description": "This API is used to update the booking details and used by agency Admin.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authoriazation",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "x-examples": {
              "SAMPLE-REQUEST": {
                "fulfilled_heads": {
                  "1": 5,
                  "2": 5,
                  "3": 5,
                  "4": 5,
                  "5": 5,
                  "6": 5,
                  "7": 5
                },
                "total": 35
              }
            }
          }
        ]
      }
    },
    "/api/v1/admin-users": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/sample_Admin_user_response"
            },
            "examples": {
              "SAMPLE-RESPONSEs": {
                "ok": true,
                "users": [
                  {
                    "user_id": "16",
                    "user_name": "MBC company",
                    "country_code": "+91",
                    "mobile": "8866988196",
                    "email": "gunjan.ranparia@marutitech.com",
                    "created_at": "2022-01-17T10:35:09.000Z"
                  }
                ]
              }
            }
          }
        },
        "operationId": "get-api-v1-user-details",
        "description": "This API is used by Master Admin to fetch the Admin users of the agencies and clients.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user_type",
            "description": "User type id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "id",
            "description": "client or agency id"
          }
        ]
      },
      "parameters": []
    },
    "/api/v1/payroll/{timeAndAttendanceId}": {
      "get": {
        "summary": "Get Payrolls",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "payroll_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "time_and_attendance_data_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "time_and_attendance_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "pay_per_hour": {
                        "type": "number",
                        "format": "float"
                      },
                      "national_insurance": {
                        "type": "number",
                        "format": "float"
                      },
                      "holiday": {
                        "type": "number",
                        "format": "float"
                      },
                      "pension": {
                        "type": "number",
                        "format": "float"
                      },
                      "apprenticeship_levy": {
                        "type": "number",
                        "format": "float"
                      },
                      "pay_per_hour_dynamic": {
                        "type": "number",
                        "format": "float"
                      },
                      "national_insurance_dynamic": {
                        "type": "number",
                        "format": "float"
                      },
                      "holiday_dynamic": {
                        "type": "number",
                        "format": "float"
                      },
                      "pension_dynamic": {
                        "type": "number",
                        "format": "float"
                      },
                      "apprenticeship_levy_dynamic": {
                        "type": "number",
                        "format": "float"
                      },
                      "margin": {
                        "type": "number",
                        "format": "float"
                      },
                      "payroll_static_total": {
                        "type": "number",
                        "format": "float"
                      },
                      "payroll_dynamic_total": {
                        "type": "number",
                        "format": "float"
                      },
                      "clearvue_savings": {
                        "type": "number",
                        "format": "float"
                      },
                      "agency_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "agency_name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "client_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "client_name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "worker_id": {
                        "type": "string",
                        "minLength": 1
                      },
                      "worker_first_name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "worker_last_name": {
                        "type": "string",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            },
            "examples": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "ok": true,
                  "status": 0,
                  "message": "string",
                  "error": "string"
                }
              },
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "status": {
                  "type": "number"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"timeAndAttendanceId\" is required",
                    "path": [
                      "timeAndAttendanceId"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "status": 401,
                  "ok": false,
                  "message": "Your session has expired. Please login again.",
                  "error": "UNAUTHORIZED"
                }
              },
              "properties": {
                "status": {
                  "type": "number"
                },
                "ok": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "description": "",
              "type": "object",
              "x-examples": {
                "example-1": {
                  "status": 403,
                  "ok": false,
                  "message": "Request is missing required authorization.",
                  "error": "PERMISSION_DENIED"
                }
              },
              "properties": {
                "status": {
                  "type": "number"
                },
                "ok": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string",
                  "minLength": 1
                },
                "error": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "Get the calculated information of payroll",
        "parameters": [
          {
            "type": "number",
            "name": "timeAndAttendanceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "limit",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_by",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_type",
            "required": true
          }
        ],
        "tags": [
          "Payroll"
        ]
      }
    },
    "/api/v1/payroll": {
      "post": {
        "tags": [
          "Payroll"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "summary": "upload Payroll report",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "in": "formData",
            "type": "file",
            "name": "payroll_report",
            "description": "CSV file of payroll records",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "client_id",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "site_id",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "agency_id",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "start_date",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "end_date",
            "required": true
          },
          {
            "in": "formData",
            "type": "string",
            "name": "week",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/time-and-attendance-upload-response"
            },
            "examples": {
              "SAMPLE-OK-RESPONSE": {
                "ok": true,
                "message": "payroll report has been updated successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "status": 400,
                "ok": false,
                "message": "worker id does not match for employee id(s): 1,123",
                "error": "BAD_REQUEST"
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payroll"
        ],
        "summary": "get Payroll summarized report",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "in": "query",
            "type": "string",
            "name": "client_id",
            "required": true
          },
          {
            "in": "query",
            "type": "string",
            "name": "site_id"
          },
          {
            "in": "query",
            "type": "string",
            "name": "agency_id"
          },
          {
            "in": "query",
            "type": "string",
            "name": "week"
          },
          {
            "type": "string",
            "in": "query",
            "name": "region_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "payroll_list": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time_and_attendance_created_at": {
                        "type": "string"
                      },
                      "payroll_meta_created_at": {
                        "type": "string"
                      },
                      "week": {
                        "type": "string"
                      },
                      "time_and_attendance_id": {
                        "type": "string"
                      },
                      "payroll_meta_id": {
                        "type": "string"
                      },
                      "agency_id": {
                        "type": "string"
                      },
                      "agency_name": {
                        "type": "string"
                      },
                      "client_id": {
                        "type": "string"
                      },
                      "client_name": {
                        "type": "string"
                      },
                      "site_id": {
                        "type": "string"
                      },
                      "site_name": {
                        "type": "string"
                      },
                      "total_hours": {
                        "type": "number",
                        "format": "float"
                      },
                      "total_charge": {
                        "type": "number",
                        "format": "float"
                      },
                      "total_pay": {
                        "type": "number",
                        "format": "float"
                      },
                      "total_agency_margin": {
                        "type": "number",
                        "format": "float"
                      },
                      "actual_margin": {
                        "type": "number",
                        "format": "float"
                      },
                      "rate_card_margin": {
                        "type": "number",
                        "format": "float"
                      },
                      "credit_per_hour": {
                        "type": "number",
                        "format": "float"
                      },
                      "clearvue_savings": {
                        "type": "number",
                        "format": "float"
                      },
                      "worker_clock_report": {
                        "type": "boolean"
                      },
                      "detail_payroll_report": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "status": 400,
                "ok": false,
                "message": "worker id does not match for employee id(s): 1,123",
                "error": "BAD_REQUEST"
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/clients": {
      "get": {
        "summary": "Get Master Admin Dashboard Client List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/master-admin-dashboard-client-list-api-response"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "count": 11,
                "records": [
                  {
                    "id": 4,
                    "name": "The British Company",
                    "used": 2,
                    "total_active_workers": 10,
                    "cumulative_clearvue_saving": 257.1,
                    "total_spend": 2390,
                    "last_week_active_workers": 3
                  },
                  {
                    "id": 1,
                    "name": "California Networks",
                    "used": 2,
                    "total_active_workers": 11,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 0
                  },
                  {
                    "id": 5,
                    "name": "Agusta Westland",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 0
                  },
                  {
                    "id": 6,
                    "name": "Yorkshire Corp",
                    "used": 1,
                    "total_active_workers": 2,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 1
                  },
                  {
                    "id": 7,
                    "name": "Transyug Corporation",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 0
                  },
                  {
                    "id": 8,
                    "name": "British Client",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 0
                  },
                  {
                    "id": 9,
                    "name": "Client 1",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 0
                  },
                  {
                    "id": 10,
                    "name": "RST Company",
                    "used": 1,
                    "total_active_workers": 1,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 1
                  },
                  {
                    "id": 11,
                    "name": "OPQ Comapny",
                    "used": 1,
                    "total_active_workers": 5,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 2
                  },
                  {
                    "id": 12,
                    "name": "The CLEARVUE TEST Group",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 0
                  },
                  {
                    "id": 13,
                    "name": "WeRUnited",
                    "used": 6,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0,
                    "last_week_active_workers": 0
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-clients",
        "description": "This API is used to get master admin dashboard client list.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ],
        "tags": [
          "Master Admin Dashboard"
        ]
      }
    },
    "/api/v1/user/resend-invitation/{userId}": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Resend invitation email",
        "description": "This can only be done by CleaeVue Admin or Client Admin.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Authorization token",
            "required": true
          }
        ],
        "operationId": "post-api-v1-user-resend-invitation-userId",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "RESEND-INVITATION-RESPONSE": {
                "ok": true,
                "message": "Invitation has been resend successfully."
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"userId\" is required",
                    "path": [
                      "userId"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Resource Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "RESOURCE-NOT-FOUND-ERROR-RESPONSE": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        }
      }
    },
    "/api/v1/dashboard/agencies": {
      "get": {
        "summary": "Get Master Admin Dashboard Agency List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/master-admin-dashboard-agency-list-api"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "count": 14,
                "records": [
                  {
                    "id": 8,
                    "name": "GHI Company",
                    "used": 1,
                    "total_active_workers": 2,
                    "cumulative_clearvue_saving": 437.8,
                    "total_spend": 2130
                  },
                  {
                    "id": 3,
                    "name": "ABC Company",
                    "used": 1,
                    "total_active_workers": 3,
                    "cumulative_clearvue_saving": -180.7,
                    "total_spend": 260
                  },
                  {
                    "id": 1,
                    "name": "Jackson Agencies",
                    "used": 1,
                    "total_active_workers": 1,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 2,
                    "name": "Soumya Mehta",
                    "used": 1,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 4,
                    "name": "Test Agency",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 5,
                    "name": "Bredskifte Holmstrupgård Sealand2",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 6,
                    "name": "DEF Company",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 7,
                    "name": "Maruti Agency",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 9,
                    "name": "JKL Company",
                    "used": 1,
                    "total_active_workers": 1,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 10,
                    "name": "Agency 1",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-agencies",
        "description": "This API is used to get master admin dashboard agency list.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ],
        "tags": [
          "Master Admin Dashboard"
        ]
      }
    },
    "/api/v1/dashboard/sectors": {
      "get": {
        "summary": "Get Dashboard Sectors List",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/master-admin-dashboard-sector-list-api"
            },
            "examples": {
              "DASHBOARD SECTORS": {
                "ok": true,
                "count": 25,
                "records": [
                  {
                    "id": 15,
                    "name": "Health and Care Sector",
                    "used": 1,
                    "total_active_workers": 5,
                    "cumulative_clearvue_saving": 257.1,
                    "total_spend": 2390
                  },
                  {
                    "id": 1,
                    "name": "Automotive",
                    "used": 6,
                    "total_active_workers": 6,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 2,
                    "name": "Aviation",
                    "used": 1,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 3,
                    "name": "Construction and Housing",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 4,
                    "name": "Construction Products",
                    "used": 1,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 5,
                    "name": "Consumer Goods",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 6,
                    "name": "Data Protection",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 7,
                    "name": "Drivers",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 8,
                    "name": "Ecommerce",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  },
                  {
                    "id": 9,
                    "name": "Electronics, Machinery and Parts",
                    "used": 0,
                    "total_active_workers": 0,
                    "cumulative_clearvue_saving": 0,
                    "total_spend": 0
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-sectors",
        "description": "This API is used to fetch list of sectors for the master admin dashboard.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ],
        "tags": [
          "Master Admin Dashboard"
        ]
      }
    },
    "/api/v1/dashboard/analytics": {
      "get": {
        "summary": "Get Dashboard Analytics Data",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/master-admin-dashboard-analytics-response-payload"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "records": {
                  "agency_count": 25,
                  "client_count": 31,
                  "worker_count": 18,
                  "total_spends": 610,
                  "cumulative_savings": 324.22
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-analytics",
        "description": "This API is used to get master admin analytics data.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          }
        ],
        "tags": [
          "Master Admin Dashboard"
        ]
      }
    },
    "/api/v1/time-and-attendance/get-sample-sheet": {
      "get": {
        "summary": "Get T&A sample file",
        "description": "Get a link to download sample file of time and attendance sheet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Authorization token",
            "required": true
          }
        ],
        "tags": [
          "Time And Attendance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "ok": {
                  "type": "boolean"
                },
                "resource_url": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized Error. For providing invalid authorization token.",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden (For Missing required token)",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-time-and-attendance-get-sample-sheet"
      }
    },
    "/api/v1/sites/{site_id}/jobs": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-list-of-jobs-for-dropdown"
            },
            "examples": {
              "SAMPLE-RESPONSE": {
                "ok": true,
                "job_list": [
                  {
                    "job_id": "1",
                    "job_name": "Job1"
                  },
                  {
                    "job_id": "2",
                    "job_name": "Job2"
                  },
                  {
                    "job_id": "3",
                    "job_name": "Job3"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          }
        },
        "operationId": "get-api-v1-sites-:site_id-jobs",
        "description": "This API is used to get the job id and job name for the site. ",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          }
        ]
      },
      "parameters": [
        {
          "type": "string",
          "name": "site_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v1/dashboard/worker-demographics": {
      "get": {
        "summary": "Get worker demographics data",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-worker-demographics-data"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "value": "10",
                      "label": "UK"
                    },
                    {
                      "value": "5",
                      "label": "India"
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-worker-demographics",
        "description": "This API is used to get demographics data of the workers.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/workforce/day-wise-shift-utilization": {
      "get": {
        "summary": "WorkForce Shift Utilization",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/workforceShiftUtilizationModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": [
                  30,
                  40,
                  45,
                  50,
                  49,
                  60,
                  10
                ],
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get shift utilization of workforce.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/worker-service-length": {
      "get": {
        "summary": "WorkForce Length Of Service",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/workForceLengthOfServiceModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "name": "1-2",
                      "data": [
                        10
                      ]
                    },
                    {
                      "name": "3-4",
                      "data": [
                        50
                      ]
                    },
                    {
                      "name": "5-8",
                      "data": [
                        20
                      ]
                    },
                    {
                      "name": "9-12",
                      "data": [
                        8
                      ]
                    },
                    {
                      "name": "13-16",
                      "data": [
                        18
                      ]
                    },
                    {
                      "name": "17-26",
                      "data": [
                        19
                      ]
                    },
                    {
                      "name": "27-52",
                      "data": [
                        30
                      ]
                    },
                    {
                      "name": "52+",
                      "data": [
                        0
                      ]
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get service length of workforce.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/workforce/pool-utilization": {
      "get": {
        "summary": "WorkForce Pool Utilization",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/workForcePoolUtilization"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "current_range": {
                    "total_count": 1,
                    "active_count": 0
                  },
                  "last_range": {
                    "total_count": 1,
                    "active_count": 0
                  },
                  "is_past_range_value_required": false
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get WorkForce Pool Utilization.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/leaver-count-and-starter-retention": {
      "get": {
        "summary": "Leavers Count and Starter Retention",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/leaversCountAndStarterRetentionModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "leavers_count": {
                    "current_value": 100,
                    "past_value": 120
                  },
                  "new_starter_retention": 10
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get leavers count and starter retention.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/leaver-shift-utilization": {
      "get": {
        "summary": "Leavers Shift Utilization",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/workforceShiftUtilizationModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": [
                  30,
                  40,
                  45,
                  50,
                  49,
                  60,
                  10
                ],
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get leavers shift retention.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/leaver-service-length": {
      "get": {
        "summary": "Leavers length of service",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/workForceLengthOfServiceModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "name": "1-2",
                      "data": [
                        1
                      ]
                    },
                    {
                      "name": "3-4",
                      "data": [
                        0
                      ]
                    },
                    {
                      "name": "5-8",
                      "data": [
                        15
                      ]
                    },
                    {
                      "name": "9-12",
                      "data": [
                        0
                      ]
                    },
                    {
                      "name": "13-16",
                      "data": [
                        0
                      ]
                    },
                    {
                      "name": "17-26",
                      "data": [
                        0
                      ]
                    },
                    {
                      "name": "27-52",
                      "data": [
                        0
                      ]
                    },
                    {
                      "name": "52+",
                      "data": [
                        1
                      ]
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get leavers length of service.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/agency-wise-leaver-service-length": {
      "get": {
        "summary": "Agency Wise Leavers length of service",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/leaversAgencyWiseLengthOfServiceModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "name": "1-2",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    },
                    {
                      "name": "3-4",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    },
                    {
                      "name": "5-8",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    },
                    {
                      "name": "9-12",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    },
                    {
                      "name": "13-16",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    },
                    {
                      "name": "17-26",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    },
                    {
                      "name": "27-52",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    },
                    {
                      "name": "52+",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": [
                            10
                          ]
                        },
                        {
                          "name": "Agency-2",
                          "data": [
                            32
                          ]
                        }
                      ]
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get leavers length of service.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/agency-wise-new-starter-retention": {
      "get": {
        "summary": "Agency Wise Starter Retention",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/agencyWiseStarterRetentionModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "label": "Final Agency - 1",
                      "active": 2,
                      "in_active": 2,
                      "count": 2
                    },
                    {
                      "label": "Final Agency - II",
                      "active": 2,
                      "in_active": 2,
                      "count": 2
                    },
                    {
                      "label": "Demo Agency",
                      "active": 0,
                      "in_active": 0,
                      "count": 0
                    },
                    {
                      "label": "finalagencyadmin",
                      "active": 0,
                      "in_active": 0,
                      "count": 0
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get agency wise starter retention.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/agency-wise-leaver-shift-utilization": {
      "get": {
        "summary": "Agency Wise Shift utilization",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/agencyWiseShiftUtilizationModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "label": "Agency-1",
                      "1-3": 30,
                      "4+": 60,
                      "total": 90
                    },
                    {
                      "label": "Agency-2",
                      "1-3": 30,
                      "4+": 60,
                      "total": 90
                    },
                    {
                      "label": "Agency-3",
                      "1-3": 30,
                      "4+": 60,
                      "total": 90
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get agency wise shift utilization.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/leavers-data": {
      "get": {
        "summary": "Leavers Data",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/leaversDataModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "total": 17,
                "result": {
                  "rows": [
                    {
                      "agency_name": "Final Agency - 1",
                      "inactive": 11
                    },
                    {
                      "agency_name": "Final Agency - II",
                      "inactive": 6
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get leavers data.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/workforce/agency-wise-length-of-service": {
      "get": {
        "summary": "Workforce Agency Wise Length of Service",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/leaversAgencyWiseLengthOfServiceModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "name": "1-2",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    },
                    {
                      "name": "3-4",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    },
                    {
                      "name": "5-8",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    },
                    {
                      "name": "9-12",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    },
                    {
                      "name": "13-16",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    },
                    {
                      "name": "17-26",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    },
                    {
                      "name": "27-52",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    },
                    {
                      "name": "52+",
                      "data": [
                        {
                          "name": "Agency-1",
                          "data": 10
                        },
                        {
                          "name": "Agency-2",
                          "data": 32
                        }
                      ]
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get Workforce agency wise length of service.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/workforce/agency-wise-worker-demographics": {
      "get": {
        "summary": "Workforce Agency Worker Demographics",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/agencyWiseWorkforceWorkerDemographicsModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "label": "UK",
                      "value": [
                        {
                          "name": "Agency-1",
                          "value": 10
                        },
                        {
                          "name": "Agency-2",
                          "value": 32
                        },
                        {
                          "name": "Agency-3",
                          "value": 5
                        },
                        {
                          "name": "Agency-4",
                          "value": 1
                        }
                      ]
                    },
                    {
                      "label": "IND",
                      "value": [
                        {
                          "name": "Agency-1",
                          "value": 10
                        },
                        {
                          "name": "Agency-2",
                          "value": 32
                        },
                        {
                          "name": "Agency-3",
                          "value": 5
                        },
                        {
                          "name": "Agency-4",
                          "value": 1
                        }
                      ]
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get Workforce agency wise length of service.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/workforce/agency-wise-shift-utilization": {
      "get": {
        "summary": "Workforce Agency wise Shift Utilization",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/agencyWiseShiftUtilizationModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "label": "Agency-1",
                      "1-3": 30,
                      "4+": 60,
                      "total": 90
                    },
                    {
                      "label": "Agency-2",
                      "1-3": 30,
                      "4+": 60,
                      "total": 90
                    },
                    {
                      "label": "Agency-3",
                      "1-3": 30,
                      "4+": 60,
                      "total": 90
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get Workforce agency wise shift utilization.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/activity-stats": {
      "get": {
        "summary": "Activity Stats",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dashboardActivityStatsModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "is_past_range_value_required": true,
                  "shift_fullfilment": {
                    "current_range": {
                      "fulfilled": "0",
                      "lost": "0"
                    },
                    "past_range": {
                      "fulfilled": "0",
                      "lost": "0"
                    }
                  },
                  "shift_lost": {
                    "current_range": {
                      "count": "0"
                    },
                    "past_range": {
                      "count": "0"
                    }
                  },
                  "total_spent": {
                    "current_range": {
                      "basic": 0,
                      "other": 0
                    },
                    "past_range": {
                      "basic": 0,
                      "other": 0
                    }
                  },
                  "total_hours": {
                    "current_range": {
                      "basic": 0,
                      "other": 0
                    },
                    "past_range": {
                      "basic": 0,
                      "other": 0
                    }
                  }
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get dashboard activity stats.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/activity/head-count": {
      "get": {
        "summary": "Activity Head Count",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/activity-head-count-response-payload"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "label": "Agency-1",
                      "active": 30,
                      "inactive": 60,
                      "total": 90
                    },
                    {
                      "label": "Agency-2",
                      "active": 30,
                      "inactive": 60,
                      "total": 90
                    },
                    {
                      "label": "Agency-3",
                      "active": 30,
                      "inactive": 60,
                      "total": 90
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get activity head count.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/activity/spend": {
      "get": {
        "summary": "Activity Spend",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/agencyWiseStarterRetentionModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "is_past_range_value_required": false,
                  "current_value": 0,
                  "past_value": 0,
                  "rows": [
                    {
                      "label": "Agency-1",
                      "count": 123
                    },
                    {
                      "label": "Agency-2",
                      "count": 10
                    },
                    {
                      "label": "Agency-3",
                      "count": 20
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get activity spend.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/activity/average-hours": {
      "get": {
        "summary": "Activity Average Hours",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/agencyWiseStarterRetentionModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "is_past_range_value_required": true,
                  "current_value": 0,
                  "past_value": 0,
                  "rows": [
                    {
                      "label": "Jackson Agencies",
                      "count": 0
                    },
                    {
                      "label": "Soumya Mehta",
                      "count": 0
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get activity average hours.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/header-stats": {
      "get": {
        "summary": "Header Stats",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/headerStatsModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "clearvue_savings": 6500,
                  "cumulative_clearvue_savings": 8500,
                  "shift_lost": {
                    "current_range_count": 18,
                    "past_range_count": 10
                  },
                  "shift_fulfilled": {
                    "current_range_count": 200,
                    "past_range_count": 15
                  }
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get header stats.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/leavers-analysis": {
      "get": {
        "summary": "Header Leaver Analysis",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/agencyWiseStarterRetentionModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "label": "Agency-1",
                      "count": 123
                    },
                    {
                      "label": "Agency-2",
                      "count": 10
                    },
                    {
                      "label": "Agency-3",
                      "count": 20
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get header leaver analysis.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/dashboard/ratings": {
      "get": {
        "summary": "Header Ratings",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ratingsModel"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "agency": {
                    "1": 100,
                    "2": 20,
                    "3": 30,
                    "4": 40,
                    "5": 10
                  },
                  "site": {
                    "1": 100,
                    "2": 20,
                    "3": 30,
                    "4": 40,
                    "5": 10
                  },
                  "client": {
                    "1": 100,
                    "2": 20,
                    "3": 30,
                    "4": 40,
                    "5": 10
                  }
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "",
        "description": "This API is used to get header ratings.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ]
      }
    },
    "/api/v1/user/{id}/revoke": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Revoke User Access",
        "operationId": "put-api-v1-user-id-revoke",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-REVOKE-SUCCESS": {
                "ok": true,
                "message": "User access revoked."
              }
            },
            "schema": {
              "$ref": "#/definitions/revokeUser"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT-FOUND": {
                "ok": true,
                "message": "User access revoked."
              }
            }
          }
        },
        "description": "This endpoint is used to revoke the access of the user.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          }
        ]
      }
    },
    "/api/v1/workers/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Worker Details",
        "tags": [
          "Worker"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-worker-details-by-workerID"
            },
            "examples": {
              "SAMPLE_SUCCESS": {
                "ok": true,
                "data": {
                  "id": "2",
                  "first_name": "xyzworkertwo",
                  "last_name": "xyzworkertwo",
                  "user_id": "95",
                  "email": "xyzw2@clearvue.com",
                  "country_code": "91",
                  "mobile": "8866988745",
                  "national_insurance_number": "ABC02",
                  "payroll_ref": "1",
                  "date_of_birth": "1974-11-29",
                  "post_code": "395005",
                  "start_date": "2022-01-06",
                  "nationality": "USA",
                  "orientation": "N",
                  "agency_id": "3",
                  "agency_name": "ABC Company",
                  "client_id": "4",
                  "client_name": "The British Company",
                  "job_id": "2",
                  "job_name": "HR",
                  "is_active": 1,
                  "in_actived_at": "2022-02-21",
                  "created_at": "2022-03-21",
                  "length_of_service": {
                    "years": 0,
                    "months": 1,
                    "weeks": 2
                  },
                  "shift_completed": 2,
                  "appreciation": {
                    "awards": 0,
                    "badge": 5,
                    "kudos": 0
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT_FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        },
        "operationId": "get-api-v1-workers-id",
        "description": "This API is used to get the worker details by worker ID",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          }
        ]
      }
    },
    "/api/v1/dashboard/activity/shift-details": {
      "get": {
        "summary": "Activity Shift Details",
        "tags": [
          "Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-activity-shift-details"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "is_data_available": true,
                "result": {
                  "rows": [
                    {
                      "label": "Agency-1",
                      "lost_count": 50,
                      "fulfilled_count": 100
                    },
                    {
                      "label": "Agency-2",
                      "lost_count": 10,
                      "fulfilled_count": 100
                    },
                    {
                      "label": "Agency-3",
                      "lost_count": 5,
                      "fulfilled_count": 20
                    },
                    {
                      "label": "Agency-3",
                      "lost_count": 7,
                      "fulfilled_count": 14
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "get-api-v1-dashboard-activity-shift-details",
        "parameters": [
          {
            "type": "number",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "department_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "shift_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date"
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date"
          }
        ],
        "description": "This API is used to get activity shift details(shift lost and shift utilization)."
      }
    },
    "/api/v1/site/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "update site",
        "operationId": "put-api-v1-site-id",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "UPDATE SITE": {
                "ok": true,
                "message": "Site details has been updated successfully."
              }
            },
            "schema": {
              "$ref": "#/definitions/update-department-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "authorization"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/createSite"
            }
          }
        ]
      }
    },
    "/api/v1/region-drop-down": {
      "parameters": [],
      "get": {
        "summary": "Get region drop down list",
        "tags": [
          "Regions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-region-drop-down-response-payload"
            },
            "examples": {
              "SAMPLE-SUCCESS-RESPONSE": {
                "ok": true,
                "regions": [
                  {
                    "id": "7",
                    "name": "England"
                  },
                  {
                    "id": "1",
                    "name": "XYZ-Ahmedabad Region"
                  },
                  {
                    "id": "2",
                    "name": "XYZ-Mumbai Region"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          }
        },
        "operationId": "get-api-v1-region-drop-down-clientId",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "authorization"
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id"
          }
        ]
      }
    },
    "/api/v1/region/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update region by id",
        "operationId": "put-api-v1-region-id",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-UPDATE-SUCCESS": {
                "ok": true,
                "message": "Region details has been updated successfully."
              }
            },
            "schema": {
              "$ref": "#/definitions/update-booking-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "example-1": {
                "ok": true,
                "status": 0,
                "message": "string",
                "error": "string"
              }
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "authorization"
          },
          {
            "in": "formData",
            "type": "string",
            "name": "name",
            "required": true
          },
          {
            "in": "formData",
            "type": "number",
            "name": "client_id",
            "required": true
          }
        ],
        "tags": [
          "Regions"
        ]
      }
    },
    "/api/v1/payroll-download/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Download payroll csv",
        "tags": [
          "Payroll"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-payroll-csv-response-payload"
            },
            "examples": {
              "SAMPLE_SUCCESS": {
                "ok": true,
                "payroll_list": [
                  {
                    "employee_id": "ABC01",
                    "total_charge": 1460,
                    "actual_employment_costs": 1153.5,
                    "total_margin": 306.5,
                    "actual_margin_per_hour": 4.19863,
                    "rate_card_margin": 1.2,
                    "credit_per_hour": 2.99863,
                    "total_savings": 218.9
                  },
                  {
                    "employee_id": "ABC02",
                    "total_charge": 1460,
                    "actual_employment_costs": 1153.5,
                    "total_margin": 306.5,
                    "actual_margin_per_hour": 4.19863,
                    "rate_card_margin": 1.2,
                    "credit_per_hour": 2.99863,
                    "total_savings": 218.9
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          }
        },
        "operationId": "get-api-v1-payroll-download-id",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization"
          }
        ]
      }
    },
    "/api/v1/payroll-get-sample-sheet": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Payroll"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-payroll-sample-sheet"
            },
            "examples": {
              "SAMPLE_SUCCESS": {
                "ok": true,
                "resource_url": "https://clearvue-static.s3.eu-west-2.amazonaws.com/payroll_report_sample/payroll_report_sample.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA2VSXEJ2DMB3UXDPG%2F20220331%2Feu-west-2%2Fs3%2Faws4_request&X-Amz-Date=20220331T084116Z&X-Amz-Expires=604800&X-Amz-Signature=04b76797db339d8bd1db4f18b884775d07ff9710532b30eaa62aa0a72822e0a&X-Amz-SignedHeaders=host"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          }
        },
        "operationId": "get-api-v1-payroll-get-sample-sheet",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization"
          }
        ]
      }
    },
    "/api/v1/dashboard/age": {
      "get": {
        "summary": "Get workers age analytics data",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-worker-demographics-data"
            },
            "examples": {
              "SUCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "value": "1",
                      "label": "46"
                    },
                    {
                      "value": "2",
                      "label": "47"
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR_RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-age",
        "description": "This API is used to get workers age analytics data.",
        "parameters": [
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          }
        ],
        "tags": [
          "Demographic Dashboard"
        ]
      }
    },
    "/api/v1/dashboard/gender": {
      "get": {
        "summary": "API to get gender details of workers",
        "tags": [
          "Demographic Dashboard"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-worker-demographics-data"
            },
            "examples": {
              "SUCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "value": "1",
                      "label": "Female"
                    },
                    {
                      "value": "1",
                      "label": "Male"
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-gender",
        "description": "This API is used to get gender details for the workers.",
        "parameters": [
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/proximity": {
      "get": {
        "summary": "Get workers proximity analytics data",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-worker-demographics-data"
            },
            "examples": {
              "SUCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "rows": [
                    {
                      "value": "1",
                      "label": "395004"
                    },
                    {
                      "value": "2",
                      "label": "395005"
                    }
                  ]
                },
                "is_data_available": true
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR_RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-proximity",
        "description": "This API is used to get workers proximity analytics data.",
        "parameters": [
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "region_id"
          }
        ],
        "tags": [
          "Demographic Dashboard"
        ]
      }
    },
    "/api/v1/worker/sign-up": {
      "post": {
        "summary": "Worker Registration",
        "operationId": "post-api-v1-worker-sign-up",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true,
                "message": "Worker registration successful"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"email\" is not allowed to be empty",
                    "path": [
                      "email"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT-FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find your account.",
                "error": "USER_NOT_FOUND"
              }
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "description": "This endpoint is used for workers to onboard themselves on the ClearVue extended application.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/workerregistrationmodel"
            },
            "x-examples": {
              "SAMPLE-REQUEST-BODY": {
                "email": "anastasia.w@gmail.com",
                "national_insurance_number": "aaaadscw",
                "first_name": "Anastasia",
                "password": "Test@123"
              }
            },
            "description": ""
          }
        ]
      }
    },
    "/api/v1/worker/login": {
      "post": {
        "summary": "Worker Login API",
        "operationId": "post-api-v1-worker-login",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true,
                "user_id": "142",
                "user_type": "worker",
                "access_token": "<ACCESS_TOKEN>",
                "refresh_token": "<REFRESH_TOKEN>"
              }
            },
            "schema": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"email\" is not allowed to be empty",
                    "path": [
                      "email"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT-FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find your account.",
                "error": "USER_NOT_FOUND"
              }
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "x-examples": {
              "SAMPLE-REQUEST": {
                "email": "anastasia.west@gmail.com",
                "password": "!anastasia.w",
                "device_token": "APPLE-IPHONE-TOKEN-11"
              }
            }
          }
        ],
        "description": "This endpoint is used by worker to login into the system."
      }
    },
    "/v1/worker/documents": {
      "post": {
        "summary": "Upload Worker Documents",
        "operationId": "post-v1-worker-documents",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true,
                "documents": {
                  "docs": {
                    "name": "utility-bill.jpg",
                    "url": "url-1",
                    "uuid": "6c1637e0-b40e-11ec-890d-9901c8fa876b"
                  },
                  "utility_bill": {
                    "name": "identity.jpg",
                    "url": "url-2",
                    "uuid": "6c1ffbe0-b40e-11ec-890d-9901c8fa876b"
                  }
                }
              }
            }
          }
        },
        "description": "This API is used to upload the worker's documents",
        "parameters": [
          {
            "in": "formData",
            "type": "string",
            "name": "file_name"
          }
        ]
      }
    },
    "/api/v1/workers/users/{user_id}": {
      "parameters": [
        {
          "type": "string",
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update worker profile",
        "operationId": "put-api-v1-workers-users-user_id",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true,
                "message": "Details are updated successfully."
              }
            },
            "schema": {
              "$ref": "#/definitions/update-booking-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"documents.passport\" is required",
                    "path": [
                      "documents",
                      "passport"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED-ERROR-RESPONSE": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED-ERROR-RESPONSE": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT_FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find your account.",
                "error": "WORKER_NOT_FOUND"
              }
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/update-worker-profile-request-payload"
            }
          }
        ],
        "tags": [
          "Worker"
        ]
      }
    },
    "/api/v1/worker/check-availability": {
      "post": {
        "summary": "",
        "operationId": "post-api-v1-worker-check-availability",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true
              }
            },
            "schema": {
              "$ref": "#/definitions/worker-existence-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"first_name\" is not allowed to be empty",
                    "path": [
                      "first_name"
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "WORKER NOT FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find your account.",
                "error": "WORKER_NOT_FOUND"
              }
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "CONFLICT ERROR": {
                "status": 409,
                "ok": false,
                "message": "You are already registered to the system. Please try to login to the system.",
                "error": "WORKER_ALREADY_EXISTS"
              }
            }
          }
        },
        "tags": [
          "Worker"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/worker-existence-request-payload"
            }
          }
        ]
      }
    },
    "/api/v1/worker/user/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Worker Profile with training data",
        "tags": [
          "Worker"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "Sample Success Response": {
                "ok": true,
                "data": {
                  "user_id": "87",
                  "worker_id": "5826",
                  "name": "Cody Francis",
                  "post_code": "101101",
                  "documents": "{\"docs\":\"url-of-doc\"}",
                  "length_of_service": {
                    "years": 0,
                    "months": 7,
                    "weeks": 2
                  },
                  "shift_completed": 0,
                  "training": [
                    {
                      "training_id": "10",
                      "message_id": "44",
                      "message_name": "Template Name",
                      "training_completed_at": "2021-12-21"
                    }
                  ]
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "Un-Authorised": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT-FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find your account.",
                "error": "USER_NOT_FOUND"
              }
            }
          }
        },
        "operationId": "get-api-v1-worker-user-id",
        "description": "This API is used to get the worker profile data with training, shifts completed and length of service.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT_AUTH_TOKEN"
          }
        ]
      }
    },
    "/api/v1/messages": {
      "post": {
        "summary": "Send Message to Workers",
        "operationId": "post-api-v1-messages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/bulk-worker-upload-response"
            },
            "examples": {
              "RESPONSE-PAYLOAD": {
                "ok": true,
                "message": "Message is sent successfully!"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"site_id\" is required",
                    "path": [
                      "site_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "example-1": {
                "status": 404,
                "ok": false,
                "message": "Oops! There are no workers available to send message as per selected filters!",
                "error": "WORKERS_NOT_AVAILABLE"
              }
            }
          }
        },
        "description": "This API is used to send new messages to the workers.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "description": "JWT_AUTH_TOKEN"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id",
            "description": "Site-id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "description": "Client-id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id",
            "description": "Agency-id"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/send-message-request-payload"
            },
            "x-examples": {
              "REQUEST-PAYLOAD": {
                "name": "Template Name",
                "title": "Template Header. Eg - You have received a Kudos point",
                "type": "TRAINING",
                "body": [
                  [
                    {
                      "type": "text",
                      "data": "Message text"
                    },
                    {
                      "type": "media",
                      "data": "abcd.png"
                    }
                  ]
                ],
                "from": "Team Leader",
                "send_to": [
                  {
                    "type": "department",
                    "data": [
                      1
                    ]
                  }
                ]
              }
            },
            "description": ""
          }
        ],
        "tags": [
          "Messages"
        ]
      },
      "get": {
        "summary": "",
        "operationId": "get-api-v1-messages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/message-list-api-response"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": [
                  {
                    "id": "61",
                    "name": "Training Name - 9",
                    "title": "This is training message title",
                    "type": "TRAINING",
                    "from": "Team Leader",
                    "body": [
                      [
                        {
                          "data": "Lorem Ipsum is .",
                          "type": "text"
                        },
                        {
                          "data": "https://image.com/image.jpg",
                          "type": "media"
                        },
                        {
                          "data": "http://example.com/",
                          "type": "link"
                        }
                      ],
                      [
                        {
                          "data": "typesetting industry. Lorem Ipsum has been the industry'text"
                        },
                        {
                          "data": "https://image.shutterstock.com/sampling-600w-689023369.jpg",
                          "type": "media"
                        },
                        {
                          "data": "http://example.com/",
                          "type": "link"
                        }
                      ]
                    ],
                    "receiver": [
                      {
                        "data": [
                          1
                        ],
                        "type": "workers"
                      }
                    ],
                    "sent_to": "Individual",
                    "created_at": "2022-04-15T04:27:50.000Z"
                  }
                ],
                "count": 1
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"limit\" is required",
                    "path": [
                      "limit"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "Get list of already sent messages.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT_AUTH_TOKEN"
          },
          {
            "type": "string",
            "in": "query",
            "name": "from"
          },
          {
            "type": "string",
            "in": "query",
            "name": "name"
          },
          {
            "type": "string",
            "in": "query",
            "name": "type"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_by"
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_type"
          },
          {
            "type": "number",
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "limit",
            "required": true
          }
        ]
      }
    },
    "/api/v1/workers-groups": {
      "get": {
        "summary": "get list of worker groups",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-worker-groups-response-payload"
            },
            "examples": {
              "RESPONSE-PAYLOAD": {
                "ok": true,
                "data": {
                  "shifts": [
                    {
                      "id": "14",
                      "name": "Day Shift - Jammu"
                    }
                  ],
                  "jobs": [
                    {
                      "id": "3",
                      "name": "Developer - Jammu"
                    }
                  ],
                  "departments": [
                    {
                      "id": "3",
                      "name": "Jammu Dept 1"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"site_id\" must be a number",
                    "path": [
                      "site_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-workers-groups",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "site_id",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "agency_id"
          }
        ]
      }
    },
    "/api/v1/templates": {
      "post": {
        "summary": "create a new message template",
        "operationId": "post-api-v1-templates",
        "responses": {
          "201": {
            "description": "Created",
            "examples": {
              "SAMPLE-CREATE-RESPONSE": {
                "ok": true,
                "id": "7",
                "message": "Template is added successfully!"
              }
            },
            "schema": {
              "$ref": "#/definitions/create-message-template-response-template"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is not allowed to be empty",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "This API is to create a new message template.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/create-message-template-request-payload"
            },
            "x-examples": {
              "REQUEST-PAYLOAD": {
                "name": "Template Name",
                "title": "Template title. Eg - You have received a Kudos point",
                "type": "KUDOS",
                "body": [
                  [
                    {
                      "type": "text",
                      "data": "Content is in text format"
                    }
                  ]
                ],
                "from": "From Field. Eg - Team Leader"
              }
            }
          }
        ],
        "tags": [
          "Messages"
        ]
      },
      "get": {
        "summary": "Get list of available templates",
        "operationId": "get-api-v1-templates",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "templates": [
                  {
                    "id": "1",
                    "name": "Template Name"
                  },
                  {
                    "id": "2",
                    "name": "New Template"
                  },
                  {
                    "id": "3",
                    "name": "Template Name"
                  },
                  {
                    "id": "8",
                    "name": "Template Name"
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/get-list-of-template-response-payload"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          }
        ],
        "tags": [
          "Messages"
        ]
      }
    },
    "/api/v1/templates/{id}": {
      "parameters": [
        {
          "type": "number",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update existing templates",
        "operationId": "put-api-v1-templates-id",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true,
                "message": "Template is updated successfully!"
              }
            },
            "schema": {
              "$ref": "#/definitions/update-existing-template-response-payload"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR-RESPONSE": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"name\" is required",
                    "path": [
                      "name"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT_FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        },
        "description": "API to update existing templates.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "required": true,
            "name": "Authorization"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/update-existing-template-request-payload"
            },
            "x-examples": {
              "REQUEST-PAYLOAD": {
                "name": "Template Name",
                "title": "Template title. Eg - You have received a Kudos point",
                "type": "KUDOS",
                "body": [
                  [
                    {
                      "type": "text",
                      "data": "Content is in text format"
                    }
                  ]
                ],
                "from": "From Field. Eg - Team Leader"
              }
            }
          }
        ],
        "tags": [
          "Messages"
        ]
      },
      "get": {
        "summary": "Get existing template details",
        "operationId": "get-api-v1-templates-id",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true,
                "template": {
                  "id": "5",
                  "name": "Template Name",
                  "title": "Template title. Eg - You have received a Kudos point",
                  "type": "KUDOS",
                  "body": [
                    [
                      {
                        "data": "Content is in text format",
                        "type": "text"
                      }
                    ]
                  ],
                  "from": "From Field. Eg - Team Leader",
                  "created_by": "22",
                  "created_at": "2022-04-11T12:57:07.000Z"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/get-template-response-payload"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "RESOURCE_NOT_FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          }
        ],
        "tags": [
          "Messages"
        ],
        "description": "This API is used to get existing template details."
      }
    },
    "/api/v1/users/{user_id}/messages": {
      "parameters": [
        {
          "type": "string",
          "name": "user_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get list of messages received by the worker",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/worker-side-message-list-response-payload"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": [
                  {
                    "id": "43",
                    "sender": "C",
                    "from": "Team Leader",
                    "title": "Template Header. Eg - You have received a Kudos point",
                    "body": [
                      [
                        {
                          "data": "Message text",
                          "type": "text"
                        },
                        {
                          "data": "abcd.png",
                          "type": "media"
                        }
                      ]
                    ],
                    "created_at": "2022-04-07T08:49:17.000Z",
                    "is_message_read": false,
                    "user_name": "Cody Francis"
                  },
                  {
                    "id": "42",
                    "sender": "A",
                    "from": "Team Leader",
                    "title": "Template Header. Eg - You have received a Kudos point",
                    "body": [
                      [
                        {
                          "data": "Message text",
                          "type": "text"
                        },
                        {
                          "data": "abcd.png",
                          "type": "media"
                        }
                      ]
                    ],
                    "created_at": "2022-04-07T08:39:15.000Z",
                    "is_message_read": false,
                    "user_name": "Cody Francis"
                  }
                ],
                "count": 5,
                "logo": ""
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD-REQUEST-ERROR": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"type\" must be one of [general, award, badge, kudos, feed, training]",
                    "path": [
                      "type"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-users-user_id-messages",
        "description": "This API is used to get list of messages for displaying them to the workers.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "type",
            "description": "Type of the screen (general/award/badge/kudos/feed/training)",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "view",
            "description": "Type of the view of general/feed messages (client/agency/general)"
          },
          {
            "type": "number",
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "limit",
            "required": true
          }
        ]
      }
    },
    "/api/v1/workers/training/messages/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get training message details",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-training-message-details-response-payload"
            },
            "examples": {
              "SUCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "id": "44",
                  "sender": "C",
                  "from": "Team Leader1",
                  "title": "Template Header. Eg - You have received a new training",
                  "body": [
                    [
                      {
                        "data": "Message text",
                        "type": "text"
                      },
                      {
                        "data": "abcd.png",
                        "type": "media"
                      }
                    ]
                  ],
                  "created_at": "2022-04-07T08:49:25.000Z",
                  "user_name": "Tim Hamilton",
                  "is_training_completed": true,
                  "training_completed_at": "2022-04-07T08:49:26.000Z",
                  "require_more_training": false,
                  "require_training_updated_at": null
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "RESOURCE-NOT-FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        },
        "operationId": "get-api-v1-workers-training-messages-id",
        "description": "This API is used to get training message details for the worker.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          }
        ]
      }
    },
    "/api/v1/message-read/{id}": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Message read status",
        "operationId": "put-api-v1-message-read-id",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true
              }
            },
            "schema": {
              "$ref": "#/definitions/worker-existence-response-payload"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION-DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT-FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find message.",
                "error": "MESSAGE_NOT_AVAILABLE"
              },
              "$ref": "#/definitions/okModel"
            }
          }
        },
        "tags": [
          "Messages"
        ],
        "description": "This API is used by workers to update the message read status",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ]
      }
    },
    "/api/v1/messages/{message_id}": {
      "parameters": [
        {
          "type": "string",
          "name": "message_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get message details",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-message-details-response-schema"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "result": {
                  "id": "64",
                  "sender": "C",
                  "from": "Team Leader",
                  "title": "This is message title",
                  "body": [
                    [
                      {
                        "data": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",
                        "type": "text"
                      },
                      {
                        "data": "https://image.shutterstock.com/image-vector/crowd-behaviors-measuring-social-sampling-600w-689023369.jpg",
                        "type": "media"
                      },
                      {
                        "data": "http://example.com/",
                        "type": "link"
                      }
                    ]
                  ],
                  "created_at": "2022-04-15T04:31:04.000Z",
                  "type": "kudos"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": ""
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "RESOURCE_NOT_FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        },
        "operationId": "get-api-v1-messages-message_id",
        "description": "This API is used to get user details to display that into the mobile application.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token",
            "required": true
          }
        ]
      }
    },
    "/api/v1/messages/{id}/training-completed": {
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Worker Track Training",
        "operationId": "put-api-v1-messages-id-training-completed",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/okModel"
            },
            "examples": {
              "SAMPLE-SUCCESS": {
                "ok": true
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "MISSING-AUTHORIZATION": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "NOT-FOUND": {
                "status": 404,
                "ok": false,
                "message": "Oops! Couldn't find the requested resource.",
                "error": "RESOURCE_NOT_FOUND"
              }
            }
          }
        },
        "tags": [
          "Worker",
          "Messages"
        ],
        "description": "This API is used by worker to update their respective status on the training provided by agency and client.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorisation",
            "description": "JWT Auth Token"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WorkerTrackTrainingModel"
            },
            "x-examples": {
              "SAMPLE-REQUEST-BODY": {
                "require_more_training": true,
                "is_training_completed": true
              }
            }
          }
        ]
      }
    },
    "/api/v1/survey/categories": {
      "get": {
        "summary": "Get survey categories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-survey-categories"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "surveys": [
                  {
                    "id": "1",
                    "name": "New Starter Survey - Week 1"
                  },
                  {
                    "id": "2",
                    "name": "New Starter Survey - Week 2"
                  },
                  {
                    "id": "3",
                    "name": "New Starter Survey - Week 4"
                  },
                  {
                    "id": "4",
                    "name": "New Starter Survey - Week 8"
                  },
                  {
                    "id": "5",
                    "name": "New Starter Survey - Week 12"
                  },
                  {
                    "id": "6",
                    "name": "New Starter Survey - Week 26"
                  },
                  {
                    "id": "7",
                    "name": "General Survey"
                  },
                  {
                    "id": "8",
                    "name": "Worker Survey"
                  },
                  {
                    "id": "9",
                    "name": "Exit Survey"
                  },
                  {
                    "id": "10",
                    "name": "Pay Survey"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-survey-categories",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          }
        ],
        "description": "This API is used to get survey category.",
        "tags": [
          "Survey"
        ]
      }
    },
    "/api/v1/survey/questions/{id}": {
      "parameters": [
        {
          "type": "number",
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get survey questions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-survey-questions"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "questions": [
                  {
                    "id": "67",
                    "question_text": "The training I receive is sufficient for me to perform my work well",
                    "label": "Training",
                    "sequence": 1,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "68",
                    "question_text": "I feel comfortable to ask my direct line manager for help if I have difficulties with a task",
                    "label": "Leadership",
                    "sequence": 2,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "69",
                    "question_text": "My co-workers and I work well together as a team",
                    "label": "Engagement",
                    "sequence": 3,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "70",
                    "question_text": "I am appropriately recognised when I perform well in my regular duties",
                    "label": "Recognition",
                    "sequence": 4,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "71",
                    "question_text": "I would recommend my workplace to family members and friends",
                    "label": "Identification",
                    "sequence": 5,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "72",
                    "question_text": "The onboarding process was professional and gave me an accurate insight into my role",
                    "label": "Role Expectations",
                    "sequence": 6,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "73",
                    "question_text": "I feel comfortable to ask my direct line manager for help if I have difficulties with a task",
                    "label": "Leadership",
                    "sequence": 7,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "74",
                    "question_text": "I feel comfortable raising any issues to my agency & issues are dealt with quickly & effectively",
                    "label": "Engagement",
                    "sequence": 8,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "75",
                    "question_text": "I rarely have issues with my pay, including requesting & receiving holiday pay",
                    "label": "Payroll",
                    "sequence": 9,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "76",
                    "question_text": "I would recommend my workplace to family members and friends",
                    "label": "Identification",
                    "sequence": 10,
                    "option_type": "Rating",
                    "options": null
                  },
                  {
                    "id": "77",
                    "question_text": "Please choose one of the following reasons for why you left this role",
                    "label": null,
                    "sequence": 11,
                    "option_type": "Mcq",
                    "options": [
                      "Found other job- better pay",
                      "Found other job – more suitable shifts",
                      "Found other job – closer to home",
                      "Relocated outside of the area",
                      "Non work related matter",
                      "Transferred onto a perm contract onsite",
                      "Terminated for poor performance"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            },
            "schema": {
              "$ref": "#/definitions/default-error-response"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-survey-questions-id",
        "tags": [
          "Survey"
        ]
      }
    },
    "/api/v1/survey/response": {
      "post": {
        "summary": "Add survey response",
        "operationId": "post-api-v1-survey-response",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "message": "Response is submitted successfully."
              }
            },
            "schema": {
              "$ref": "#/definitions/update-booking-response-payload"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "tags": [
          "Survey"
        ],
        "description": "This API is to add survey response.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "authorization",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/create-survey-request-payload"
            },
            "x-examples": {
              "REQUEST": {
                "result": [
                  {
                    "workerId": "1",
                    "questionId": "67",
                    "siteId": "1",
                    "agencyId": "1",
                    "clientId": "1",
                    "surveyId": "9",
                    "rating": "3.5",
                    "answer": [
                      "I have not received training."
                    ]
                  }
                ]
              }
            }
          }
        ]
      }
    },
    "/api/v1/scheduler/timeline/messages": {
      "post": {
        "summary": "Send timeline completion messages",
        "operationId": "post-api-v1-scheduler-timeline-messages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/okModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Missing required authorization details.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "This API is used to send timeline completion messages to the workers.\nAPI is sending messages on completion of 1, 2, 4, 8, 12, 26, 39, 52.\nAPI is also sending work anniversary messages on completion of 2, 3, 4, etc years.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Token for accessing the API",
            "required": true
          }
        ],
        "tags": [
          "Automated Events"
        ]
      }
    },
    "/api/v1/scheduler/birthday/messages": {
      "post": {
        "summary": "Send birthday messages to the workers",
        "operationId": "post-api-v1-scheduler-birthday-messages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/okModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Missing required authorization details.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "This API is used to send birthday messages to the workers.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Token for accessing the API",
            "required": true
          }
        ],
        "tags": [
          "Automated Events"
        ]
      }
    },
    "/api/v1/scheduler/worker-inactive/messages": {
      "post": {
        "summary": "Send messages to workers who remain inactive",
        "operationId": "post-api-v1-scheduler-worker-inactive-messages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/okModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Missing required authorization details.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "description": "API is used to check last week and last two weeks zero-hours workers and to send them an automated message",
        "tags": [
          "Automated Events"
        ],
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Token for accessing the API",
            "required": true
          }
        ]
      }
    },
    "/api/v1/scheduler/first-day-welcome/messages": {
      "post": {
        "summary": "Send first day welcome message",
        "operationId": "post-api-v1-scheduler-first-day-welcome-messages",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/okModel"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Missing required authorization details.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "Request is missing required authorization.",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "tags": [
          "Automated Events"
        ],
        "description": "This API is used to send first day welcome message to the workers.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "Token for accessing the API",
            "required": true
          }
        ]
      }
    },
    "/api/v1/site-ratings": {
      "get": {
        "summary": "Get Dashboard Site Ratings",
        "tags": [
          "Dashboard",
          "Ratings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dashboardSiteRatingsModel"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "average_rating": 3.1,
                "reviews_count": 117,
                "label_wise_ratings": [
                  {
                    "label": "Training",
                    "ratings": "3.6"
                  },
                  {
                    "label": "Leadership",
                    "ratings": "3.4"
                  },
                  {
                    "label": "Engagement",
                    "ratings": "2.7"
                  },
                  {
                    "label": "Recognition",
                    "ratings": "2.8"
                  },
                  {
                    "label": "Identification",
                    "ratings": "3.1"
                  }
                ]
              },
              "NO-RATINGS": {
                "ok": true,
                "average_rating": 0,
                "reviews_count": 0,
                "label_wise_ratings": [
                  {
                    "label": "Training",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Leadership",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Engagement",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Recognition",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Identification",
                    "ratings": "0.0"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": ""
            },
            "examples": {
              "UNAUTHORISED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-site-ratings",
        "description": "This API is used to get the ratings of the site by client_id, region_id, site_id and agency_id.",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          }
        ]
      }
    },
    "/api/v1/site-ratings/details": {
      "get": {
        "summary": "Get Sites Detailed Ratings",
        "tags": [
          "Dashboard",
          "Ratings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dashboardDetailedRatingsModel"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "ratings": {
                  "XYZ-Ahmedabad Site": {
                    "reviews_count": 134,
                    "average_rating": 3.2,
                    "label_wise_ratings": [
                      {
                        "label": "Training",
                        "ratings": "3.6"
                      },
                      {
                        "label": "Leadership",
                        "ratings": "3.5"
                      },
                      {
                        "label": "Engagement",
                        "ratings": "2.8"
                      },
                      {
                        "label": "Recognition",
                        "ratings": "2.8"
                      },
                      {
                        "label": "Identification",
                        "ratings": "3.2"
                      }
                    ]
                  }
                }
              },
              "NO-RATINGS": {
                "ok": true,
                "ratings": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORISED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-site-ratings-details",
        "description": "This endpoint will be utilised for making GET request to fetch the ratings of the sites that fall under client or region individually.",
        "parameters": [
          {
            "type": "string",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "region_id"
          },
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          }
        ]
      }
    },
    "/api/v1/agency-ratings": {
      "get": {
        "summary": "Cumulative and Individual Agency Ratings",
        "tags": [
          "Dashboard",
          "Ratings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dashboardSiteRatingsModel"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "average_rating": 3.1,
                "reviews_count": 15,
                "label_wise_ratings": [
                  {
                    "label": "Role Expectations",
                    "ratings": "2.8"
                  },
                  {
                    "label": "Leadership",
                    "ratings": "2.8"
                  },
                  {
                    "label": "Engagement",
                    "ratings": "3.3"
                  },
                  {
                    "label": "Payroll",
                    "ratings": "3.3"
                  },
                  {
                    "label": "Identification",
                    "ratings": "3.3"
                  }
                ]
              },
              "NO-RATINGS": {
                "ok": true,
                "average_rating": 0,
                "reviews_count": 0,
                "label_wise_ratings": [
                  {
                    "label": "Training",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Leadership",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Engagement",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Recognition",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Identification",
                    "ratings": "0.0"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-agency-ratings",
        "description": "This API will be used by client admins and agency admins to get the cumulative agency rating or individual agency ratings by client_id or agency_id.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "agency_id"
          }
        ]
      }
    },
    "/api/v1/agency-ratings/details": {
      "get": {
        "summary": "Agency Ratings Details",
        "tags": [
          "Dashboard",
          "Ratings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dashboardDetailedRatingsModel"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "ratings": {
                  "Jackson Agencies": {
                    "reviews_count": 15,
                    "average_rating": 3.1,
                    "label_wise_ratings": [
                      {
                        "label": "Role Expectations",
                        "ratings": "2.8"
                      },
                      {
                        "label": "Leadership",
                        "ratings": "2.8"
                      },
                      {
                        "label": "Engagement",
                        "ratings": "3.3"
                      },
                      {
                        "label": "Payroll",
                        "ratings": "3.3"
                      },
                      {
                        "label": "Identification",
                        "ratings": "3.3"
                      }
                    ]
                  }
                }
              },
              "NO-RATINGS": {
                "ok": true,
                "ratings": {}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-agency-ratings-details",
        "description": "This endpoint will be used by client admins to get the list of the agency ratings individually associated with the client.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "client_id"
          }
        ]
      }
    },
    "/api/v1/client-ratings": {
      "get": {
        "summary": "Dashboard Client Ratings",
        "tags": [
          "Dashboard",
          "Ratings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/dashboardSiteRatingsModel"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "average_rating": 3.6,
                "reviews_count": 17,
                "label_wise_ratings": [
                  {
                    "label": "Training",
                    "ratings": "3.8"
                  },
                  {
                    "label": "Leadership",
                    "ratings": "4.0"
                  },
                  {
                    "label": "Engagement",
                    "ratings": "3.0"
                  },
                  {
                    "label": "Recognition",
                    "ratings": "3.3"
                  },
                  {
                    "label": "Identification",
                    "ratings": "3.5"
                  }
                ]
              },
              "NO_RATINGS": {
                "ok": true,
                "average_rating": 0,
                "reviews_count": 0,
                "label_wise_ratings": [
                  {
                    "label": "Training",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Leadership",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Engagement",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Recognition",
                    "ratings": "0.0"
                  },
                  {
                    "label": "Identification",
                    "ratings": "0.0"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-client-ratings",
        "description": "This endpoint will be used by the client admin, region admin, site admin and agency admin to GET the cumulative client ratings and individual client rating.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "agency_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/trends/leavers": {
      "get": {
        "summary": "Dashboard leavers trends",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/leavers-trends-response-payload"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "result": {
                  "labels": [
                    "Week 1",
                    "Week 2",
                    "Week 3",
                    "Week 4",
                    "Week 5",
                    "Week 6",
                    "Week 7",
                    "Week 8",
                    "Week 9",
                    "Week 10",
                    "Week 11",
                    "Week 12",
                    "Week 13",
                    "Week 14",
                    "Week 15",
                    "Week 16",
                    "Week 17",
                    "Week 18",
                    "Week 19",
                    "Week 20",
                    "Week 21",
                    "Week 22",
                    "Week 23",
                    "Week 24",
                    "Week 25",
                    "Week 26",
                    "Week 27",
                    "Week 28",
                    "Week 29",
                    "Week 30",
                    "Week 31",
                    "Week 32",
                    "Week 33",
                    "Week 34",
                    "Week 35",
                    "Week 36",
                    "Week 37",
                    "Week 38",
                    "Week 39",
                    "Week 40",
                    "Week 41",
                    "Week 42",
                    "Week 43",
                    "Week 44",
                    "Week 45",
                    "Week 46",
                    "Week 47",
                    "Week 48",
                    "Week 49",
                    "Week 50",
                    "Week 51",
                    "Week 52",
                    "Week 53"
                  ],
                  "total_hours": [
                    25,
                    26,
                    28,
                    30,
                    28,
                    26,
                    25,
                    25,
                    40,
                    26,
                    24,
                    22,
                    26,
                    22,
                    15,
                    20,
                    22,
                    26,
                    35,
                    12,
                    14,
                    16,
                    18,
                    16,
                    14,
                    15,
                    16,
                    17,
                    19,
                    24,
                    19,
                    21,
                    22,
                    24,
                    24,
                    26,
                    22,
                    24,
                    26,
                    28,
                    26,
                    22,
                    23,
                    24,
                    26,
                    34,
                    29,
                    32,
                    25,
                    32,
                    31,
                    27,
                    0
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-trends-leavers",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "required": true,
            "name": "Authorization"
          },
          {
            "type": "number",
            "in": "query",
            "required": true,
            "name": "client_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date",
            "required": true
          }
        ],
        "description": "API is used to get total leavers by weeks from start date to end date.",
        "tags": [
          "Trends Analysis"
        ]
      },
      "parameters": []
    },
    "/api/v1/dashboard/trends/heads": {
      "get": {
        "summary": "Dashboard total heads trends",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/heads-trends-response-payload"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "result": {
                  "labels": [
                    "Week 1",
                    "Week 2",
                    "Week 3",
                    "Week 4",
                    "Week 5",
                    "Week 6",
                    "Week 7",
                    "Week 8",
                    "Week 9",
                    "Week 10",
                    "Week 11",
                    "Week 12",
                    "Week 13",
                    "Week 14",
                    "Week 15",
                    "Week 16",
                    "Week 17",
                    "Week 18",
                    "Week 19",
                    "Week 20",
                    "Week 21",
                    "Week 22",
                    "Week 23",
                    "Week 24",
                    "Week 25",
                    "Week 26",
                    "Week 27",
                    "Week 28",
                    "Week 29",
                    "Week 30",
                    "Week 31",
                    "Week 32",
                    "Week 33",
                    "Week 34",
                    "Week 35",
                    "Week 36",
                    "Week 37",
                    "Week 38",
                    "Week 39",
                    "Week 40",
                    "Week 41",
                    "Week 42",
                    "Week 43",
                    "Week 44",
                    "Week 45",
                    "Week 46",
                    "Week 47",
                    "Week 48",
                    "Week 49",
                    "Week 50",
                    "Week 51",
                    "Week 52",
                    "Week 53"
                  ],
                  "total_workers": [
                    20,
                    22,
                    25,
                    20,
                    23,
                    25,
                    22,
                    18,
                    25,
                    23,
                    18,
                    16,
                    28,
                    22,
                    30,
                    22,
                    18,
                    16,
                    20,
                    29,
                    32,
                    35,
                    31,
                    34,
                    30,
                    32,
                    32,
                    30,
                    30,
                    34,
                    31,
                    35,
                    38,
                    42,
                    31,
                    31,
                    35,
                    35,
                    31,
                    38,
                    32,
                    32,
                    36,
                    38,
                    35,
                    32,
                    37,
                    34,
                    34,
                    40,
                    42,
                    45,
                    0
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-trends-leavers",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "required": true,
            "name": "Authorization"
          },
          {
            "type": "number",
            "in": "query",
            "required": true,
            "name": "client_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date",
            "required": true
          }
        ],
        "description": "API is used to get total heads by weeks from start date to end date.",
        "tags": [
          "Trends Analysis"
        ]
      },
      "parameters": []
    },
    "/api/v1/dashboard/trends/hours": {
      "get": {
        "summary": "Dashboard total hours trends",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-standard-overtime-trends"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "result": {
                  "labels": [
                    "Week 1",
                    "Week 2",
                    "Week 3",
                    "Week 4",
                    "Week 5",
                    "Week 6",
                    "Week 7",
                    "Week 8",
                    "Week 9",
                    "Week 10",
                    "Week 11",
                    "Week 12",
                    "Week 13",
                    "Week 14",
                    "Week 15",
                    "Week 16",
                    "Week 17",
                    "Week 18",
                    "Week 19",
                    "Week 20",
                    "Week 21",
                    "Week 22",
                    "Week 23",
                    "Week 24",
                    "Week 25",
                    "Week 26",
                    "Week 27",
                    "Week 28",
                    "Week 29",
                    "Week 30",
                    "Week 31",
                    "Week 32",
                    "Week 33",
                    "Week 34",
                    "Week 35",
                    "Week 36",
                    "Week 37",
                    "Week 38",
                    "Week 39",
                    "Week 40",
                    "Week 41",
                    "Week 42",
                    "Week 43",
                    "Week 44",
                    "Week 45",
                    "Week 46",
                    "Week 47",
                    "Week 48",
                    "Week 49",
                    "Week 50",
                    "Week 51",
                    "Week 52"
                  ],
                  "standard": [
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48,
                    40,
                    48
                  ],
                  "overtime": [
                    14,
                    15,
                    16,
                    15,
                    16,
                    17,
                    18,
                    14,
                    15,
                    16,
                    15,
                    16,
                    17,
                    18,
                    14,
                    15,
                    16,
                    15,
                    16,
                    17,
                    18,
                    14,
                    15,
                    16,
                    15,
                    16,
                    17,
                    18,
                    14,
                    15,
                    16,
                    15,
                    16,
                    17,
                    18,
                    14,
                    15,
                    16,
                    15,
                    16,
                    17,
                    18,
                    14,
                    15,
                    16,
                    15,
                    16,
                    17,
                    18,
                    20,
                    22,
                    24
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-trends-leavers",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "required": true,
            "name": "Authorization"
          },
          {
            "type": "number",
            "in": "query",
            "required": true,
            "name": "client_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date",
            "required": true
          }
        ],
        "description": "API is used to get total standard and overtime hours by weeks from start date to end date.",
        "tags": [
          "Trends Analysis"
        ]
      },
      "parameters": []
    },
    "/api/v1/dashboard/trends/spend": {
      "get": {
        "summary": "Dashboard total spend trends",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-standard-overtime-trends"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "result": {
                  "labels": [
                    "Week 1",
                    "Week 2",
                    "Week 3",
                    "Week 4",
                    "Week 5",
                    "Week 6",
                    "Week 7",
                    "Week 8",
                    "Week 9",
                    "Week 10",
                    "Week 11",
                    "Week 12",
                    "Week 13",
                    "Week 14",
                    "Week 15",
                    "Week 16",
                    "Week 17",
                    "Week 18",
                    "Week 19",
                    "Week 20",
                    "Week 21",
                    "Week 22",
                    "Week 23",
                    "Week 24",
                    "Week 25",
                    "Week 26",
                    "Week 27",
                    "Week 28",
                    "Week 29",
                    "Week 30",
                    "Week 31",
                    "Week 32",
                    "Week 33",
                    "Week 34",
                    "Week 35",
                    "Week 36",
                    "Week 37",
                    "Week 38",
                    "Week 39",
                    "Week 40",
                    "Week 41",
                    "Week 42",
                    "Week 43",
                    "Week 44",
                    "Week 45",
                    "Week 46",
                    "Week 47",
                    "Week 48",
                    "Week 49",
                    "Week 50",
                    "Week 51",
                    "Week 52"
                  ],
                  "standard": [
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000,
                    12500,
                    10000
                  ],
                  "overtime": [
                    4200,
                    4350,
                    4500,
                    4650,
                    4800,
                    5000,
                    5500,
                    4200,
                    4350,
                    4500,
                    4650,
                    4800,
                    5000,
                    5500,
                    4200,
                    4350,
                    4500,
                    4650,
                    4800,
                    5000,
                    5500,
                    4200,
                    4350,
                    4500,
                    4650,
                    4800,
                    5000,
                    5500,
                    4200,
                    4350,
                    4500,
                    4650,
                    4800,
                    5000,
                    5500,
                    4200,
                    4350,
                    4500,
                    4650,
                    4800,
                    5000,
                    5500,
                    4200,
                    4350,
                    4500,
                    4650,
                    4800,
                    5000,
                    5500,
                    6200,
                    6800,
                    7500
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"client_id\" is required",
                    "path": [
                      "client_id"
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-trends-leavers",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "required": true,
            "name": "Authorization"
          },
          {
            "type": "number",
            "in": "query",
            "required": true,
            "name": "client_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date",
            "required": true
          }
        ],
        "description": "API is used to get total standard and overtime spends by weeks from start date to end date.",
        "tags": [
          "Trends Analysis"
        ]
      },
      "parameters": []
    },
    "/api/v1/dashboard/trends/agency-rating": {
      "get": {
        "summary": "GET Agency Trends",
        "tags": [
          "Dashboard",
          "Trends Analysis"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "result": {
                  "labels": [
                    "Week 1",
                    "Week 2",
                    "Week 3",
                    "Week 4",
                    "Week 5",
                    "Week 6",
                    "Week 7",
                    "Week 8",
                    "Week 9",
                    "Week 10",
                    "Week 11",
                    "Week 12",
                    "Week 13",
                    "Week 14",
                    "Week 15",
                    "Week 16",
                    "Week 17",
                    "Week 18",
                    "Week 19",
                    "Week 20",
                    "Week 21",
                    "Week 22",
                    "Week 23",
                    "Week 24",
                    "Week 25",
                    "Week 26",
                    "Week 27",
                    "Week 28",
                    "Week 29",
                    "Week 30",
                    "Week 31",
                    "Week 32",
                    "Week 33",
                    "Week 34",
                    "Week 35",
                    "Week 36",
                    "Week 37",
                    "Week 38",
                    "Week 39",
                    "Week 40",
                    "Week 41",
                    "Week 42",
                    "Week 43",
                    "Week 44",
                    "Week 45",
                    "Week 46",
                    "Week 47",
                    "Week 48",
                    "Week 49",
                    "Week 50",
                    "Week 51",
                    "Week 52"
                  ],
                  "avg_score": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-v1-dashboard-trends-agency-rating",
        "description": "This API will be integrated inside the dashboard to get the trend analysis of the agency.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date",
            "required": true
          }
        ]
      },
      "parameters": []
    },
    "/api/v1/dashboard/trends/site-rating": {
      "get": {
        "summary": "GET Site Trends",
        "tags": [
          "Dashboard",
          "Trends Analysis"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "result": {
                  "labels": [
                    "Week 1",
                    "Week 2",
                    "Week 3",
                    "Week 4",
                    "Week 5",
                    "Week 6",
                    "Week 7",
                    "Week 8",
                    "Week 9",
                    "Week 10",
                    "Week 11",
                    "Week 12",
                    "Week 13",
                    "Week 14",
                    "Week 15",
                    "Week 16",
                    "Week 17",
                    "Week 18",
                    "Week 19",
                    "Week 20",
                    "Week 21",
                    "Week 22",
                    "Week 23",
                    "Week 24",
                    "Week 25",
                    "Week 26",
                    "Week 27",
                    "Week 28",
                    "Week 29",
                    "Week 30",
                    "Week 31",
                    "Week 32",
                    "Week 33",
                    "Week 34",
                    "Week 35",
                    "Week 36",
                    "Week 37",
                    "Week 38",
                    "Week 39",
                    "Week 40",
                    "Week 41",
                    "Week 42",
                    "Week 43",
                    "Week 44",
                    "Week 45",
                    "Week 46",
                    "Week 47",
                    "Week 48",
                    "Week 49",
                    "Week 50",
                    "Week 51",
                    "Week 52"
                  ],
                  "avg_score": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-trends-site-rating",
        "description": "This API will be integrated inside the dashboard to get the trend analysis of the agency.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date",
            "required": true
          }
        ]
      }
    },
    "/api/v1/dashboard/trends/company-rating": {
      "get": {
        "summary": "GET Client Trends",
        "tags": [
          "Dashboard",
          "Trends Analysis"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "result": {
                  "labels": [
                    "Week 1",
                    "Week 2",
                    "Week 3",
                    "Week 4",
                    "Week 5",
                    "Week 6",
                    "Week 7",
                    "Week 8",
                    "Week 9",
                    "Week 10",
                    "Week 11",
                    "Week 12",
                    "Week 13",
                    "Week 14",
                    "Week 15",
                    "Week 16",
                    "Week 17",
                    "Week 18",
                    "Week 19",
                    "Week 20",
                    "Week 21",
                    "Week 22",
                    "Week 23",
                    "Week 24",
                    "Week 25",
                    "Week 26",
                    "Week 27",
                    "Week 28",
                    "Week 29",
                    "Week 30",
                    "Week 31",
                    "Week 32",
                    "Week 33",
                    "Week 34",
                    "Week 35",
                    "Week 36",
                    "Week 37",
                    "Week 38",
                    "Week 39",
                    "Week 40",
                    "Week 41",
                    "Week 42",
                    "Week 43",
                    "Week 44",
                    "Week 45",
                    "Week 46",
                    "Week 47",
                    "Week 48",
                    "Week 49",
                    "Week 50",
                    "Week 51",
                    "Week 52"
                  ],
                  "avg_score": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    3,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-trends-company-rating",
        "description": "This API will be integrated inside the dashboard to get the trend analysis of the company.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "client_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "site_id"
          },
          {
            "type": "string",
            "in": "query",
            "name": "start_date",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "end_date",
            "required": true
          }
        ]
      }
    },
    "/api/v1/support/faq": {
      "get": {
        "summary": "Get FAQ questions and answers",
        "tags": [
          "Faq"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/faq-response-payload"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "faq_list": [
                  {
                    "question": "How to add birthdate?",
                    "answer": [
                      {
                        "type": "text",
                        "value": "انقر على الملف الشخصي"
                      }
                    ]
                  },
                  {
                    "question": "How to create an account?",
                    "answer": [
                      {
                        "type": "text",
                        "value": "Click on sign up button"
                      }
                    ]
                  },
                  {
                    "question": "How to upload work documents?",
                    "answer": [
                      {
                        "type": "text",
                        "value": "Click on profile then click on documents"
                      },
                      {
                        "type": "link",
                        "value": "https://clearvue-static.s3.eu-west-2.amazonaws.com/profile-images/AGENCY3.jpg"
                      },
                      {
                        "type": "media",
                        "value": "https://clearvue-static.s3.eu-west-2.amazonaws.com/profile-images/AGENCY16.jpg"
                      }
                    ]
                  },
                  {
                    "question": "Where to find badges earned ?",
                    "answer": [
                      {
                        "type": "text",
                        "value": "Click on profile then click on documents"
                      },
                      {
                        "type": "media",
                        "value": "https://clearvue-static.s3.eu-west-2.amazonaws.com/profile-images/AGENCY16.jpg"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-support-faq",
        "description": "API is used to get questions and answers for FAQ.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "page"
          },
          {
            "type": "number",
            "in": "query",
            "name": "limit"
          }
        ]
      }
    },
    "/api/v1/support/link-to-support": {
      "get": {
        "summary": "Get link to support questions and answers",
        "tags": [
          "Faq"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/faq-response-payload"
            },
            "examples": {
              "SUCCESS": {
                "ok": true,
                "faq_list": [
                  {
                    "question": "How to update name?",
                    "answer": [
                      {
                        "type": "text",
                        "value": "Go to profile and select name"
                      },
                      {
                        "type": "link",
                        "value": "https://www.name.com/"
                      }
                    ]
                  },
                  {
                    "question": "Where to find training message?",
                    "answer": [
                      {
                        "type": "text",
                        "value": "Где найти мои награды"
                      },
                      {
                        "type": "link",
                        "value": "https://www.name.com/"
                      }
                    ]
                  },
                  {
                    "question": "How to upload profile photo?",
                    "answer": [
                      {
                        "type": "text",
                        "value": "কিভাবে প্রোফাইল ফটো আপলোড করবেন"
                      },
                      {
                        "type": "link",
                        "value": "https://www.name.com/"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-support-faq",
        "description": "API is used to get link to support questions and answers for FAQ.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "page"
          },
          {
            "type": "number",
            "in": "query",
            "name": "limit"
          }
        ]
      },
      "parameters": []
    },
    "/api/v1/workers-nationality": {
      "get": {
        "summary": "Get nationality of the workers",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/get-nationality-response-payload"
            },
            "examples": {
              "SUCCESS-RESPONSE": {
                "ok": true,
                "nationalities": [
                  "India",
                  "United Kingdom",
                  "United States"
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "UNAUTHORIZED": {
                "status": 401,
                "ok": false,
                "message": "Your session has expired. Please login again.",
                "error": "UNAUTHORIZED"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "PERMISSION_DENIED": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-workers-nationality",
        "description": "This API is used to get the nationalities of the workers.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization"
          },
          {
            "type": "number",
            "in": "query",
            "name": "client_id",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "agency_id"
          },
          {
            "type": "number",
            "in": "query",
            "name": "site_id"
          }
        ]
      }
    },
    "/api/v1/dashboard/payroll/": {
      "get": {
        "summary": "Master Admin Payroll Listing",
        "tags": [
          "Master Admin Dashboard",
          "Payroll"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/masterAdminDashboardPayrollModel"
            },
            "examples": {
              "OK": {
                "ok": true,
                "count": 12,
                "records": [
                  {
                    "agency": "PQR Company",
                    "client": "OPQ Comapny",
                    "workers": 1,
                    "start_date": "2022-05-01",
                    "week": 6
                  },
                  {
                    "agency": "Soumya Mehta",
                    "client": "Deepmind",
                    "workers": 2,
                    "start_date": "2022-04-03",
                    "week": 2
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "BAD_REQUEST": {
                "error": "BAD_REQUEST",
                "ok": false,
                "status": 400,
                "message": [
                  {
                    "message": "\"page\" is required",
                    "path": [
                      "page"
                    ]
                  }
                ]
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/default-error-response"
            },
            "examples": {
              "FORBIDDEN": {
                "status": 403,
                "ok": false,
                "message": "You are not authorized for this action",
                "error": "PERMISSION_DENIED"
              }
            }
          }
        },
        "operationId": "get-api-v1-dashboard-payroll",
        "description": "This endpoint is integrated in the master admin dashboard for the payroll listing.",
        "parameters": [
          {
            "type": "string",
            "in": "header",
            "name": "Authorization",
            "description": "JWT Auth Token"
          },
          {
            "type": "number",
            "in": "query",
            "name": "page",
            "required": true
          },
          {
            "type": "number",
            "in": "query",
            "name": "limit",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_by",
            "required": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "sort_type",
            "required": true
          }
        ]
      }
    }
  },
  "definitions": {
    "createAgency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "postCode": {
          "type": "string"
        }
      }
    },
    "updateAgency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "post_code": {
          "type": "string"
        }
      }
    },
    "createUpdateDepartment": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "createUpdateAgencyAssociation": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "number"
        },
        "agency_id": {
          "type": "number"
        },
        "margin": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "createRateCard": {
      "type": "object",
      "items": {
        "properties": {
          "name": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "pay_per_hour": {
            "type": "string"
          },
          "insurance_rate": {
            "type": "string"
          },
          "holiday_pay_rate": {
            "type": "string"
          },
          "apprenticeship_rate": {
            "type": "string"
          },
          "pension_rate": {
            "type": "string"
          },
          "full_time_hours": {
            "type": "string"
          },
          "currency_dynamic": {
            "type": "string"
          },
          "pay_per_hour_dynamic": {
            "type": "string"
          },
          "insurance_rate_dynamic": {
            "type": "string"
          },
          "holiday_pay_rate_dynamic": {
            "type": "string"
          },
          "apprenticeship_rate_dynamic": {
            "type": "string"
          },
          "pension_rate_dynamic": {
            "type": "string"
          },
          "full_time_hours_dynamic": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          }
        }
      }
    },
    "updateRateCard": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "pay_per_hour": {
          "type": "string"
        },
        "insurance_rate": {
          "type": "string"
        },
        "holiday_pay_rate": {
          "type": "string"
        },
        "apprenticeship_rate": {
          "type": "string"
        },
        "pension_rate": {
          "type": "string"
        },
        "full_time_hours": {
          "type": "string"
        },
        "currency_dynamic": {
          "type": "string"
        },
        "pay_per_hour_dynamic": {
          "type": "string"
        },
        "insurance_rate_dynamic": {
          "type": "string"
        },
        "holiday_pay_rate_dynamic": {
          "type": "string"
        },
        "apprenticeship_rate_dynamic": {
          "type": "string"
        },
        "pension_rate_dynamic": {
          "type": "string"
        },
        "full_time_hours_dynamic": {
          "type": "string"
        }
      }
    },
    "createUpdateSector": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "createUpdateJob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "departmentId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "siteId": {
          "type": "string"
        },
        "agencyId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "shift": {
          "type": "string"
        },
        "hoursPerWeek": {
          "type": "integer"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "create-new-worker-request-payload": {
      "title": "create-new-worker-request-payload",
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "date_of_birth": {
          "type": "string",
          "description": "In YYYY-MM-DD format"
        },
        "national_insurance_number": {
          "type": "string",
          "description": "It will be unique to each worker."
        },
        "post_code": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "orientation": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "current_worker_id": {
          "type": "integer"
        },
        "start_date": {
          "type": "string",
          "description": "In YYYY-MM-DD format"
        },
        "agency_id": {
          "type": "integer"
        },
        "is_active": {
          "type": "boolean"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "date_of_birth",
        "national_insurance_number",
        "post_code",
        "nationality",
        "orientation",
        "mobile",
        "current_worker_id",
        "start_date",
        "agency_id"
      ]
    },
    "create-new-worker-response-payload": {
      "title": "create-new-worker-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "worker_id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "create-new-agency-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "agency_id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "create-new-agency-association-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "agency_association_id": {
          "type": "integer"
        }
      }
    },
    "get-sector-list-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "count": {
          "type": "integer"
        },
        "sector_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "sector_id": {
                "type": "integer"
              },
              "sector_key": {
                "type": "string"
              },
              "sector_value": {
                "type": "string"
              }
            }
          }
        }
      },
      "title": ""
    },
    "create-new-job-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "job_id": {
          "type": "integer"
        }
      }
    },
    "get-agency-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "agency": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "address": {
              "type": "object",
              "properties": {
                "address_line_1": {
                  "type": "string"
                },
                "address_line_2": {
                  "type": "string"
                },
                "address_line_3": {
                  "type": "string"
                }
              }
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "post_code": {
              "type": "string"
            },
            "count": {
              "type": "integer"
            },
            "profile_url": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            }
          }
        }
      }
    },
    "get-job-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "job_list": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "job_id": {
              "type": "string"
            },
            "job_name": {
              "type": "string"
            },
            "job_type": {
              "type": "string"
            },
            "job_shift": {
              "type": "string"
            },
            "job_hours_per_week": {
              "type": "string"
            },
            "department_id": {
              "type": "string"
            },
            "department_name": {
              "type": "string"
            },
            "site_id": {
              "type": "string"
            },
            "site_name": {
              "type": "string"
            },
            "agency_id": {
              "type": "string"
            },
            "client_id": {
              "type": "string"
            },
            "margin": {
              "type": "string"
            }
          }
        }
      }
    },
    "get-time-and-attendance-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "time_and_attendance_detail": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "hour_approved": {
              "type": "string"
            },
            "agency_id": {
              "type": "string"
            },
            "client_id": {
              "type": "string"
            },
            "agency_name": {
              "type": "string"
            },
            "client_name": {
              "type": "string"
            },
            "site_name": {
              "type": "string"
            },
            "site_id": {
              "type": "string"
            },
            "worker_name": {
              "type": "string"
            },
            "worker_id": {
              "type": "string"
            },
            "job_name": {
              "type": "string"
            },
            "job_id": {
              "type": "string"
            },
            "time_and_attendance_name": {
              "type": "string"
            },
            "time_and_attendance_id": {
              "type": "string"
            },
            "time_and_attendance_path": {
              "type": "string"
            },
            "time_and_attendance_status": {
              "type": "string"
            },
            "date": {
              "type": "string"
            },
            "payment_week": {
              "type": "string"
            }
          }
        }
      }
    },
    "get-list-of-agency-response-payload": {
      "type": "object",
      "x-examples": {
        "SAMPLE-RESPONSE": {
          "ok": true,
          "count": 3,
          "agency_list": [
            {
              "association_id": "2",
              "agency_id": "4",
              "agency_name": "Daersk Agencies",
              "address": "{\"address_line_1\": \"51, Lex Avenue, Beverly Hills\", \"address_line_2\": \"Los Angeles, California\", \"address_line_3\": \"United States\"}",
              "post_code": "101101",
              "city": "LA",
              "country": "USA",
              "created_at": "2022-01-04T17:24:20.000Z"
            }
          ]
        }
      },
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "count": {
          "type": "integer"
        },
        "agency_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "association_id": {
                "type": "integer"
              },
              "agency_id": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "address_line_1": {
                    "type": "string"
                  },
                  "address_line_2": {
                    "type": "string"
                  },
                  "address_line_3": {
                    "type": "string"
                  }
                }
              },
              "post_code": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "agency_name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "get-list-of-agency-association-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "agency_association_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "margin": {
                "type": "integer"
              },
              "agency_id": {
                "type": "integer"
              },
              "client_id": {
                "type": "integer"
              },
              "client_name": {
                "type": "string"
              },
              "agency_name": {
                "type": "string"
              }
            }
          }
        }
      },
      "x-examples": {
        "example-1": {
          "ok": true,
          "agency_association_list": [
            {
              "id": 0,
              "margin": 0,
              "agency_id": 0,
              "client_id": 0,
              "client_name": "string",
              "agency_name": "string"
            }
          ]
        }
      }
    },
    "get-list-of-time-and-attendance-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "time_and_attendance_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "create-new-department-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "department_id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "create-new-rate-card-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "rate_card_id": {
          "type": "integer"
        }
      }
    },
    "get-list-of-department-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "department_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "get-list-of-sector-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "sector_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "get-list-of-rate-card-response-payload": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "department_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "currency": {
                "type": "string"
              },
              "pay_per_hour": {
                "type": "string"
              },
              "insurance_rate": {
                "type": "string"
              },
              "holiday_pay_rate": {
                "type": "string"
              },
              "apprenticeship_rate": {
                "type": "string"
              },
              "pension_rate": {
                "type": "string"
              },
              "full_time_hours": {
                "type": "string"
              },
              "client_id": {
                "type": "string"
              },
              "currency_dynamic": {
                "type": "string"
              },
              "pay_per_hour_dynamic": {
                "type": "string"
              },
              "insurance_rate_dynamic": {
                "type": "string"
              },
              "holiday_pay_rate_dynamic": {
                "type": "string"
              },
              "apprenticeship_rate_dynamic": {
                "type": "string"
              },
              "pension_rate_dynamic": {
                "type": "string"
              },
              "full_time_hours_dynamic": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "default-error-response": {
      "title": "default-error-response",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "status": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "createClient": {
      "title": "createClient",
      "type": "object",
      "description": "Model to create a new client",
      "properties": {
        "name": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_line_3": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "sectorId": {
          "type": "integer"
        },
        "postCode": {
          "type": "string"
        }
      }
    },
    "createSite": {
      "title": "createSite",
      "type": "object",
      "description": "Model to create new site",
      "properties": {
        "name": {
          "type": "string"
        },
        "region_id": {
          "type": "integer"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_line_3": {
          "type": "string"
        },
        "post_code": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "client_id": {
          "type": "integer"
        }
      }
    },
    "create-client-response": {
      "title": "create-client-response",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "client_id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "list-of-clients-response": {
      "title": "list-of-clients-response",
      "type": "object",
      "x-examples": {
        "SAMPLE-CLIENT-LIST": {
          "ok": true,
          "count": 3,
          "client_details": [
            {
              "client_id": 16,
              "association_id": 1,
              "client_name": "Alexei Corporation",
              "sector_name": "AI",
              "address": {
                "address_line_1": "51, Lex Avenue, Beverly Hills",
                "address_line_2": "Los Angeles, California",
                "address_line_3": "United States"
              },
              "post_code": "101101",
              "city": "LA",
              "country": "USA",
              "created_at": "2021-12-29T11:20:13.000Z"
            }
          ]
        }
      },
      "description": "List of clients response model.",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "client_details": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string"
              },
              "client_name": {
                "type": "string"
              },
              "sector_id": {
                "type": "string"
              },
              "sector_name": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "address_line_1": {
                    "type": "string"
                  },
                  "address_line_2": {
                    "type": "string"
                  },
                  "address_line_3": {
                    "type": "string"
                  }
                }
              },
              "post_code": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "ok",
        "client_details"
      ]
    },
    "client-details": {
      "title": "client-details",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "client_details": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "sector_id": {
              "type": "integer"
            },
            "sector_name": {
              "type": "string"
            },
            "address": {
              "type": "object",
              "properties": {
                "address_line_1": {
                  "type": "string"
                },
                "address_line_2": {
                  "type": "string"
                },
                "address_line_3": {
                  "type": "string"
                }
              }
            },
            "post_code": {
              "type": "integer"
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "profile_url": {
              "type": "string"
            }
          }
        }
      }
    },
    "successful-login": {
      "title": "login-successful",
      "type": "object",
      "properties": {}
    },
    "login-user-not-found": {
      "title": "login-user-not-found",
      "type": "object",
      "properties": {}
    },
    "bulk-worker-upload-response": {
      "title": "bulk-worker-upload-response",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "description": "Response of the API of the bulk upload."
    },
    "Update-workers-request-payload": {
      "title": "Update-workers-request-payload",
      "type": "object",
      "properties": {
        "client_id": {
          "type": "integer",
          "x-nullable": true
        },
        "agency_id": {
          "type": "integer",
          "x-nullable": true
        },
        "job_id": {
          "type": "integer",
          "x-nullable": true
        },
        "workers": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "is_active": {
          "type": "boolean",
          "x-nullable": true
        }
      },
      "required": [
        "workers"
      ]
    },
    "get-workers-list-response": {
      "title": "get-workers-list-response",
      "type": "object",
      "description": "This model is for the response of the get workers list by client or agency ID.",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "count": {
          "type": "number"
        },
        "workers_data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "national_insurance_number": {
                "type": "string"
              },
              "payroll_ref": {
                "type": "number"
              },
              "employee_id": {
                "type": "string"
              },
              "date_of_birth": {
                "type": "string"
              },
              "post_code": {
                "type": "string"
              },
              "start_date": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "orientation": {
                "type": "string"
              },
              "agency_id": {
                "type": "number"
              },
              "agency_name": {
                "type": "string"
              },
              "client_id": {
                "type": "number"
              },
              "client_name": {
                "type": "string"
              },
              "job_id": {
                "type": "number"
              },
              "is_app_downloaded": {
                "type": "boolean"
              },
              "is_active": {
                "type": "boolean"
              },
              "in_actived_at": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "time-and-attendance-upload-response": {
      "title": "time-and-attendance-upload-response",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      },
      "description": "Response of the API of the bulk upload."
    },
    "client-users-response-model": {
      "title": "client-users-response-model",
      "description": "Client users listing mode",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "user_type_id": {
                "type": "string"
              },
              "user_type": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "verbose_id": {
                "type": "string"
              },
              "is_able_access": {
                "type": "string"
              },
              "user_name": {
                "type": "string"
              },
              "user_type_name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "request-payload-to-add-client-users": {
      "title": "request-payload-to-add-client-users",
      "type": "object",
      "properties": {
        "client_role": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "country_code": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "response-model-client-users": {
      "title": "response-model-client-users",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "user_id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "updateClientUsersModelPayload": {
      "title": "updateClientUsersModelPayload",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-nullable": true
        },
        "phone": {
          "type": "string",
          "x-nullable": true
        },
        "country_code": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "getShiftsListModel": {
      "title": "getShiftsListModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "count": {
          "type": "integer"
        },
        "shifts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "createdBy": {
                "type": "string"
              },
              "createdAt": {
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "sample_Admin_user_response": {
      "title": "sample_Admin_user_response",
      "type": "object",
      "properties": {
        "ok": {
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "user_id": {
                "type": "string"
              },
              "user_name": {
                "type": "string"
              },
              "country_code": {
                "type": "string"
              },
              "mobile": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "master-admin-dashboard-client-list-api-response": {
      "title": "master-admin-dashboard-client-list-api-response",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "records": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "used": {
                "type": "integer"
              },
              "total_active_workers": {
                "type": "integer"
              },
              "cumulative_clearvue_saving": {
                "type": "number"
              },
              "total_spend": {
                "type": "number"
              },
              "last_week_active_workers": {
                "type": "number"
              }
            }
          }
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "master-admin-dashboard-agency-list-api": {
      "title": "master-admin-dashboard-agency-list-api",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "records": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "used": {
                "type": "integer"
              },
              "total_active_workers": {
                "type": "integer"
              },
              "cumulative_clearvue_saving": {
                "type": "number"
              },
              "total_spend": {
                "type": "number"
              }
            }
          }
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "master-admin-dashboard-sector-list-api": {
      "title": "master-admin-dashboard-sector-list-api",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "records": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "used": {
                "type": "integer"
              },
              "total_active_workers": {
                "type": "integer"
              },
              "cumulative_clearvue_saving": {
                "type": "number"
              },
              "total_spend": {
                "type": "number"
              }
            }
          }
        },
        "count": {
          "type": "integer"
        }
      }
    },
    "master-admin-dashboard-analytics-response-payload": {
      "title": "master-admin-dashboard-analytics-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "records": {
          "type": "object",
          "properties": {
            "agency_count": {
              "type": "integer"
            },
            "client_count": {
              "type": "integer"
            },
            "worker_count": {
              "type": "integer"
            },
            "total_spends": {
              "type": "number"
            },
            "cumulative_savings": {
              "type": "number"
            }
          }
        }
      }
    },
    "samplebookingdetailsupdatepayload": {
      "title": "samplebookingdetailsupdatepayload",
      "type": "object",
      "properties": {
        "booking_total ": {
          "type": "integer"
        },
        "booking_details": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "booking_association_id": {
                "type": "integer"
              },
              "requested_heads": {
                "type": "object",
                "properties": {
                  "1": {
                    "type": "integer"
                  },
                  "2": {
                    "type": "integer"
                  },
                  "3": {
                    "type": "integer"
                  },
                  "4": {
                    "type": "integer"
                  },
                  "5": {
                    "type": "integer"
                  },
                  "6": {
                    "type": "integer"
                  },
                  "7": {
                    "type": "integer"
                  }
                }
              },
              "total_heads": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "get-worker-demographics-data": {
      "title": "get-worker-demographics-data",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "required": [
            "rows"
          ],
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                },
                "required": [
                  "value",
                  "label"
                ]
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      },
      "required": [
        "ok",
        "result"
      ]
    },
    "workforceShiftUtilizationModel": {
      "title": "workforceShiftUtilizationModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "array",
          "items": {}
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "workForceLengthOfServiceModel": {
      "title": "workForceLengthOfServiceModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "workForcePoolUtilization": {
      "title": "workForcePoolUtilization",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "current_range": {
              "type": "object",
              "properties": {
                "total_count": {
                  "type": "integer"
                },
                "active_count": {
                  "type": "integer"
                }
              }
            },
            "last_range": {
              "type": "object",
              "properties": {
                "total_count": {
                  "type": "integer"
                },
                "active_count": {
                  "type": "integer"
                }
              }
            },
            "is_past_range_value_required": {
              "type": "boolean"
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "leaversCountAndStarterRetentionModel": {
      "title": "leaversCountAndStarterRetentionModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "is_past_range_value_required": {
              "type": "boolean"
            },
            "leavers_count": {
              "type": "object",
              "properties": {
                "past_value": {
                  "type": "integer"
                },
                "current_value": {
                  "type": "integer"
                }
              }
            },
            "new_starter_retention": {
              "type": "object",
              "properties": {
                "inactive": {
                  "type": "integer"
                },
                "active": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "leaversAgencyWiseLengthOfServiceModel": {
      "title": "leaversAgencyWiseLengthOfServiceModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "agencies": {
              "type": "array",
              "items": {}
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "agencyWiseStarterRetentionModel": {
      "title": "agencyWiseStarterRetentionModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "active": {
                    "type": "integer"
                  },
                  "in_active": {
                    "type": "integer"
                  },
                  "count": {
                    "type": "integer"
                  }
                }
              }
            },
            "is_past_range_value_required": {
              "type": "boolean"
            },
            "current_value": {
              "type": "integer"
            },
            "past_value": {
              "type": "integer"
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "agencyWiseShiftUtilizationModel": {
      "title": "agencyWiseShiftUtilizationModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "1-3": {
                    "type": "integer"
                  },
                  "4+": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "leaversDataModel": {
      "title": "leaversDataModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "total": {
          "type": "integer"
        },
        "result": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "agency_name": {
                    "type": "integer"
                  },
                  "inactive": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "agencyWiseWorkforceWorkerDemographicsModel": {
      "title": "agencyWiseWorkforceWorkerDemographicsModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "dashboardActivityStatsModel": {
      "title": "dashboardActivityStatsModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "shift_fullfilment": {
              "type": "object",
              "properties": {
                "current_range": {
                  "type": "object",
                  "properties": {
                    "fulfilled": {
                      "type": "integer"
                    },
                    "lost": {
                      "type": "integer"
                    }
                  }
                },
                "past_range": {
                  "type": "object",
                  "properties": {
                    "fulfilled": {
                      "type": "integer"
                    },
                    "lost": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "shift_lost": {
              "type": "object",
              "properties": {
                "current_range": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                },
                "past_range": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "total_spent": {
              "type": "object",
              "properties": {
                "current_range": {
                  "type": "object",
                  "properties": {
                    "basic": {
                      "type": "integer"
                    },
                    "other": {
                      "type": "integer"
                    }
                  }
                },
                "past_range": {
                  "type": "object",
                  "properties": {
                    "basic": {
                      "type": "integer"
                    },
                    "other": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "total_hours": {
              "type": "object",
              "properties": {
                "current_range": {
                  "type": "object",
                  "properties": {
                    "basic": {
                      "type": "integer"
                    },
                    "other": {
                      "type": "integer"
                    }
                  }
                },
                "other": {
                  "type": "object",
                  "properties": {
                    "basic": {
                      "type": "integer"
                    },
                    "other": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "is_past_range_value_required": {
              "type": "boolean"
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "headerStatsModel": {
      "title": "headerStatsModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "clearvue_savings": {
              "type": "integer"
            },
            "cumulative_clearvue_savings": {
              "type": "integer"
            },
            "shift_lost": {
              "type": "object",
              "properties": {
                "current_range_count": {
                  "type": "integer"
                },
                "past_range_count": {
                  "type": "integer"
                }
              }
            },
            "shift_fulfilled": {
              "type": "object",
              "properties": {
                "current_range_count": {
                  "type": "integer"
                },
                "past_range_count": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "ratingsModel": {
      "title": "ratingsModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "agency": {
              "type": "object",
              "properties": {
                "1": {
                  "type": "integer"
                },
                "2": {
                  "type": "integer"
                },
                "3": {
                  "type": "integer"
                },
                "4": {
                  "type": "integer"
                },
                "5": {
                  "type": "integer"
                }
              }
            },
            "site": {
              "type": "object",
              "properties": {
                "1": {
                  "type": "integer"
                },
                "2": {
                  "type": "integer"
                },
                "3": {
                  "type": "integer"
                },
                "4": {
                  "type": "integer"
                },
                "5": {
                  "type": "integer"
                }
              }
            },
            "client": {
              "type": "object",
              "properties": {
                "1": {
                  "type": "integer"
                },
                "2": {
                  "type": "integer"
                },
                "3": {
                  "type": "integer"
                },
                "4": {
                  "type": "integer"
                },
                "5": {
                  "type": "integer"
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      },
      "x-examples": {}
    },
    "activity-head-count-response-payload": {
      "title": "activity-head-count-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "active": {
                    "type": "integer"
                  },
                  "inactive": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "is_data_available": {
          "type": "boolean"
        }
      }
    },
    "get-activity-shift-details": {
      "title": "get-activity-shift-details",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "is_data_available": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "required": [
            "rows"
          ],
          "properties": {
            "rows": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "lost_count": {
                    "type": "integer"
                  },
                  "fulfilled_count": {
                    "type": "integer"
                  }
                },
                "required": [
                  "label",
                  "lost_count",
                  "fulfilled_count"
                ]
              }
            }
          }
        }
      },
      "required": [
        "ok",
        "is_data_available",
        "result"
      ]
    },
    "update-client-information-by-clientID": {
      "title": "update-client-information-by-clientID",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "get-worker-details-by-workerID": {
      "title": "get-worker-details-by-workerID",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "country_code": {
              "type": "string"
            },
            "mobile": {
              "type": "string"
            },
            "national_insurance_number": {
              "type": "string"
            },
            "payroll_ref": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string"
            },
            "post_code": {
              "type": "string"
            },
            "start_date": {
              "type": "string"
            },
            "nationality": {
              "type": "string"
            },
            "orientation": {
              "type": "string"
            },
            "agency_id": {
              "type": "string"
            },
            "agency_name": {
              "type": "string"
            },
            "client_id": {
              "type": "string"
            },
            "client_name": {
              "type": "string"
            },
            "job_id": {
              "type": "string"
            },
            "job_name": {
              "type": "string"
            },
            "is_active": {
              "type": "integer"
            },
            "in_actived_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          }
        }
      }
    },
    "request-payload-to-create-region": {
      "title": "request-payload-to-create-region",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "client_id": {
          "type": "integer"
        }
      }
    },
    "response-payload-to-create-region": {
      "title": "response-payload-to-create-region",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "region_id": {
          "type": "integer"
        }
      }
    },
    "update-department-response-payload": {
      "title": "update-department-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "create-new-sector-response-payload": {
      "title": "create-new-sector-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "sector_id": {
          "type": "integer"
        }
      }
    },
    "get-list-of-sites-response-payload": {
      "title": "get-list-of-sites-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "region_id": {
                "type": "integer"
              },
              "address": {
                "type": "object",
                "properties": {
                  "address_line_1": {
                    "type": "string"
                  },
                  "address_line_2": {
                    "type": "string"
                  },
                  "address_line_3": {
                    "type": "string"
                  }
                }
              },
              "post_code": {
                "type": "integer"
              },
              "city": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "region_name": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "created_by": {
                "type": "integer"
              },
              "updated_at": {
                "type": "string"
              },
              "updated_by": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "get-list-of-site-drop-down": {
      "title": "get-list-of-site-drop-down",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "create-new-site-response-payload": {
      "title": "create-new-site-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "site_id": {
          "type": "integer"
        }
      }
    },
    "get-list-of-jobs-for-dropdown": {
      "title": "get-list-of-jobs-for-dropdown",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "job_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "integer"
              },
              "job_name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "create-user-response-payload": {
      "title": "create-user-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "revokeUser": {
      "title": "revokeUser",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "add-shift-response-payload": {
      "title": "add-shift-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "shift_id": {
          "type": "integer"
        }
      }
    },
    "get-booking-details": {
      "title": "get-booking-details",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "count": {
          "type": "integer"
        },
        "bookings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "client_id": {
                "type": "integer"
              },
              "client_name": {
                "type": "string"
              },
              "association_count": {
                "type": "integer"
              },
              "start_date": {
                "type": "string"
              },
              "end_date": {
                "type": "string"
              },
              "department_id": {
                "type": "integer"
              },
              "department_name": {
                "type": "string"
              },
              "shift_type_id": {
                "type": "string"
              },
              "region_id": {
                "type": "integer"
              },
              "region_name": {
                "type": "string"
              },
              "site_id": {
                "type": "integer"
              },
              "site_name": {
                "type": "string"
              },
              "total": {
                "type": "integer"
              },
              "status": {
                "type": "integer"
              },
              "verbose_status": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "create-shift-booking": {
      "title": "create-shift-booking",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "booking_id": {
          "type": "array",
          "items": {}
        }
      }
    },
    "update-booking-response-payload": {
      "title": "update-booking-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "get-region-drop-down-response-payload": {
      "title": "get-region-drop-down-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "get-payroll-csv-response-payload": {
      "title": "get-payroll-csv-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "payroll_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "employee_id": {
                "type": "string"
              },
              "total_charge": {
                "type": "integer"
              },
              "actual_employment_costs": {
                "type": "integer"
              },
              "total_margin": {
                "type": "integer"
              },
              "actual_margin_per_hour": {
                "type": "integer"
              },
              "rate_card_margin": {
                "type": "integer"
              },
              "credit_per_hour": {
                "type": "integer"
              },
              "total_savings": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "get-payroll-sample-sheet": {
      "title": "get-payroll-sample-sheet",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "resource_url": {
          "type": "string"
        }
      }
    },
    "workerregistrationmodel": {
      "title": "workerregistrationmodel",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "national_insurance_number": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "update-worker-profile-request-payload": {
      "title": "update-worker-profile-request-payload",
      "type": "object",
      "properties": {
        "resource": {
          "type": "string"
        },
        "documents": {
          "type": "object",
          "properties": {
            "passport": {
              "type": "string"
            },
            "driving_license": {
              "type": "string"
            },
            "identity_card": {
              "type": "string"
            },
            "utility_bill": {
              "type": "string"
            },
            "right_to_work": {
              "type": "string"
            }
          },
          "required": [
            "passport",
            "driving_license",
            "identity_card",
            "utility_bill"
          ]
        }
      }
    },
    "worker-existence-request-payload": {
      "title": "worker-existence-request-payload",
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "national_insurance_number": {
          "type": "string"
        }
      },
      "required": [
        "first_name",
        "national_insurance_number"
      ]
    },
    "worker-existence-response-payload": {
      "title": "worker-existence-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        }
      }
    },
    "send-message-request-payload": {
      "title": "send-message-request-payload",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "TRAINING",
            "REWARD",
            "AWARD",
            "KUDOS",
            "GENERAL",
            "BADGE"
          ]
        },
        "body": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "text",
                    "media",
                    "link"
                  ]
                },
                "data": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "data"
              ]
            }
          }
        },
        "from": {
          "type": "string"
        },
        "send_to": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "department",
                  "shift",
                  "job",
                  "workers"
                ]
              },
              "data": {
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "name",
        "title",
        "type",
        "body"
      ]
    },
    "get-worker-groups-response-payload": {
      "title": "get-worker-groups-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "data": {
          "type": "object",
          "properties": {
            "shifts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "jobs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            },
            "departments": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "message-list-api-response": {
      "title": "message-list-api-response",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "BADGE",
                  "GENERAL",
                  "KUDOS",
                  "REWARD",
                  "AWARD",
                  "TRAINING"
                ]
              },
              "from": {
                "type": "string"
              },
              "body": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "media",
                          "link"
                        ]
                      }
                    },
                    "required": [
                      "data",
                      "type"
                    ]
                  }
                }
              },
              "receiver": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "data",
                    "type"
                  ]
                }
              },
              "sent_to": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "title",
              "type",
              "from",
              "body",
              "receiver",
              "created_at"
            ]
          }
        },
        "count": {
          "type": "integer"
        }
      },
      "required": [
        "ok",
        "result",
        "count"
      ]
    },
    "create-message-template-request-payload": {
      "title": "create-message-template-request-payload",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "body": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "data": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "data"
              ]
            }
          }
        },
        "from": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "title",
        "type",
        "body",
        "from"
      ]
    },
    "create-message-template-response-template": {
      "title": "create-message-template-response-template",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "ok",
        "id",
        "message"
      ]
    },
    "update-existing-template-request-payload": {
      "title": "update-existing-template-request-payload",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "body": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "data": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "data"
              ]
            }
          }
        },
        "from": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "title",
        "type",
        "body",
        "from"
      ]
    },
    "update-existing-template-response-payload": {
      "title": "update-existing-template-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "worker-side-message-list-response-payload": {
      "title": "worker-side-message-list-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "from": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "body": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "data",
                      "type"
                    ]
                  }
                }
              },
              "created_at": {
                "type": "boolean"
              },
              "is_message_read": {
                "type": "string"
              },
              "user_name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "from",
              "title",
              "body",
              "created_at",
              "is_message_read",
              "user_name"
            ]
          }
        },
        "count": {
          "type": "integer"
        },
        "logo": {
          "type": "string"
        }
      },
      "required": [
        "ok",
        "result",
        "count",
        "logo"
      ]
    },
    "get-training-message-details-response-payload": {
      "title": "get-training-message-details-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "required": [
            "id",
            "sender",
            "from",
            "title",
            "body"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "sender": {
              "type": "string",
              "enum": [
                "A",
                "C"
              ]
            },
            "from": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "body": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "media",
                        "link",
                        "text"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "type"
                  ]
                }
              }
            },
            "created_at": {
              "type": "string"
            },
            "user_name": {
              "type": "string"
            },
            "is_training_completed": {
              "type": "boolean"
            },
            "training_completed_at": {
              "type": "string"
            },
            "require_more_training": {
              "type": "boolean"
            },
            "require_training_updated_at": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "ok",
        "result"
      ]
    },
    "get-message-details-response-schema": {
      "title": "get-message-details-response-schema",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "required": [
            "id",
            "sender",
            "from",
            "title",
            "body",
            "created_at",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "sender": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "body": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "link",
                        "media"
                      ]
                    }
                  },
                  "required": [
                    "data",
                    "type"
                  ]
                }
              }
            },
            "created_at": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "ok",
        "result"
      ]
    },
    "WorkerTrackTrainingModel": {
      "title": "WorkerTrackTrainingModel",
      "type": "object",
      "properties": {
        "is_training_completed": {
          "type": "boolean"
        },
        "require_more_training": {
          "type": "boolean"
        }
      },
      "description": "This model is leveraged by the api to track the worker training status."
    },
    "okModel": {
      "title": "okModel",
      "type": "object",
      "description": "This model can be used whenever the response includes only ok flag",
      "properties": {
        "ok": {
          "type": "boolean"
        }
      },
      "get-list-of-template-response-payload": {
        "title": "get-list-of-template-resonse-payload",
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean"
          },
          "templates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "required": [
        "ok",
        "templates"
      ]
    },
    "get-template-response-payload": {
      "title": "get-template-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "template": {
          "type": "object",
          "required": [
            "id",
            "name",
            "title",
            "type",
            "body",
            "from",
            "created_by"
          ],
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "created_by": {
              "type": "integer"
            }
          }
        }
      },
      "required": [
        "ok",
        "template"
      ]
    },
    "get-survey-categories": {
      "title": "get-survey-categories",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "surveys": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        }
      },
      "required": [
        "ok",
        "surveys"
      ]
    },
    "get-survey-questions": {
      "title": "get-survey-questions",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "question_text": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "sequence": {
                "type": "integer"
              },
              "option_type": {
                "type": "string"
              },
              "options": {
                "type": "array",
                "x-nullable": true,
                "items": {}
              }
            },
            "required": [
              "id",
              "question_text",
              "label",
              "sequence",
              "option_type",
              "options"
            ]
          }
        }
      },
      "required": [
        "ok",
        "questions"
      ]
    },
    "create-survey-request-payload": {
      "title": "create-survey-request-payload",
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "workerId": {
                "type": "integer"
              },
              "questionId": {
                "type": "integer"
              },
              "siteId": {
                "type": "integer"
              },
              "agencyId": {
                "type": "integer"
              },
              "clientId": {
                "type": "integer"
              },
              "surveyId": {
                "type": "integer"
              },
              "rating": {
                "type": "integer"
              },
              "answer": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "workerId",
              "questionId",
              "siteId",
              "agencyId",
              "clientId",
              "surveyId",
              "rating",
              "answer"
            ]
          }
        }
      },
      "required": [
        "result"
      ]
    },
    "dashboardSiteRatingsModel": {
      "title": "dashboardSiteRatingsModel",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "average_rating": {
          "type": "number"
        },
        "reviews_count": {
          "type": "integer"
        },
        "label_wise_ratings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "ratings": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "dashboardDetailedRatingsModel": {
      "title": "dashboardDetailedRatingsModel",
      "type": "object",
      "description": "",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "ratings": {
          "type": "object",
          "properties": {
            "{name}": {
              "type": "object",
              "properties": {
                "reviews_count": {
                  "type": "integer"
                },
                "average_rating": {
                  "type": "number"
                },
                "label_wise_ratings": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "ratings": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "leavers-trends-response-payload": {
      "title": "leavers-trends-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "required": [
            "labels",
            "total_hours"
          ],
          "properties": {
            "labels": {
              "type": "array",
              "items": {}
            },
            "total_hours": {
              "type": "array",
              "items": {}
            }
          }
        }
      },
      "required": [
        "ok",
        "result"
      ]
    },
    "heads-trends-response-payload": {
      "title": "heads-trends-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "required": [
            "labels",
            "total_workers"
          ],
          "properties": {
            "labels": {
              "type": "array",
              "items": {}
            },
            "total_workers": {
              "type": "array",
              "items": {}
            }
          }
        }
      },
      "required": [
        "ok",
        "result"
      ]
    },
    "get-standard-overtime-trends": {
      "title": "get-standard-overtime-trends",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "result": {
          "type": "object",
          "required": [
            "labels",
            "standard",
            "overtime"
          ],
          "properties": {
            "labels": {
              "type": "array",
              "items": {}
            },
            "standard": {
              "type": "array",
              "items": {}
            },
            "overtime": {
              "type": "array",
              "items": {}
            }
          }
        }
      },
      "required": [
        "ok",
        "result"
      ]
    },
    "faq-response-payload": {
      "title": "faq-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "faq_list": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "question": {
                "type": "string"
              },
              "answer": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "required": [
        "ok",
        "faq_list"
      ]
    },
    "get-nationality-response-payload": {
      "title": "get-nationality-response-payload",
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "nationalities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "ok",
        "nationalities"
      ]
    },
    "masterAdminDashboardPayrollModel": {
      "title": "masterAdminDashboardPayrollModel",
      "x-stoplight": {
        "id": "uewfie5w876h8"
      },
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean"
        },
        "count": {
          "type": "number"
        },
        "records": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "agency": {
                "type": "string"
              },
              "client": {
                "type": "string"
              },
              "workers": {
                "type": "number"
              },
              "start_date": {
                "type": "string"
              },
              "week": {
                "type": "number"
              }
            }
          }
        }
      },
      "description": ""
    }
  },
  "schemes": [
    "http"
  ],
  "host": "localhost:5000"
}